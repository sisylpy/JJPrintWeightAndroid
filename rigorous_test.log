--------- beginning of system
--------- beginning of main
07-07 16:12:50.533 22817 22817 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:12:50.542 22817 22817 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:12:50.542 22817 22817 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:12:50.543 22817 22817 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:12:50.545 22817 22817 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:12:50.546 22817 22817 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:12:52.253 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:12:52.254 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:12:52.255 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:12:52.255 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:12:52.279 22817 22817 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:12:52.393 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@4816224
07-07 16:12:52.393 22817 22817 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:12:52.393 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:12:52.394 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:12:52.394 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:12:52.396 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:12:52.396 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:12:52.396 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:12:54.254 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:12:54.255 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:12:54.256 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:12:55.112 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:12:55.113 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:12:55.113 22817 22817 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:12:55.113 22817 22817 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:12:55.113 22817 22817 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:12:55.119 22817 22817 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:12:55.168 22817 22817 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.24, 单位=斤
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:13:02.329 22817 22817 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:13:02.331 22817 22817 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:13:02.331 22817 22817 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:13:02.833 22817 22817 D CustomerStockOut: [打印流程] 测试TSC打印机响应
07-07 16:13:02.833 22817 22817 D CustomerStockOut: [打印流程] 发送TSC状态查询命令
07-07 16:13:03.834 22817 22817 D CustomerStockOut: [打印流程] TSC状态查询后连接状态: true
07-07 16:13:03.834 22817 22817 D CustomerStockOut: [打印流程] 发送打印命令验证
07-07 16:13:04.336 22817 22817 D CustomerStockOut: [打印流程] TSC最终连接状态: true
07-07 16:13:04.336 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:13:04.336 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:13:04.336 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:13:04.336 22817 22817 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:13:04.338 22817 23054 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:13:04.338 22817 23054 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:13:04.338 22817 23054 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:13:04.339 22817 23054 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:13:04.339 22817 23054 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.24
07-07 16:13:04.340 22817 23054 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:13:04.340 22817 23054 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:13:04.340 22817 23054 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:13:04.345 22817 23054 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:13:06.345 22817 23054 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:13:06.345 22817 23054 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:13:07.847 22817 23054 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:13:08.848 22817 23054 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:13:08.848 22817 23054 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:13:08.849 22817 22817 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:13:08.849 22817 22817 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:13:08.850 22817 22817 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:13:08.862 22817 22817 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:13:08.863 22817 22817 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.24, cleanWeight=0.24, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:13:08.863 22817 22817 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:13:08.863 22817 22817 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:13:08.880 22817 22817 D CustomerStockOut: [网络] API请求开始
07-07 16:13:08.887 22817 22817 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:13:08.887 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:13:08.887 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:13:08.887 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:13:08.900 22817 22817 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:13:08.901 22817 22817 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:13:08.939 22817 22817 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:13:08.939 22817 22817 D CustomerStockOut: [网络] 响应码: null
07-07 16:13:08.939 22817 22817 D CustomerStockOut: [网络] 响应消息: null
07-07 16:13:08.939 22817 22817 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:13:08.939 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:13:08.945 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:13:08.958 22817 22817 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:13:08.958 22817 22817 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:13:08.966 22817 22817 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:13:08.966 22817 22817 D CustomerStockOut: [网络] 保存流程完成
07-07 16:13:08.966 22817 22817 D CustomerStockOut: [网络] API调用完成
07-07 16:13:08.966 22817 22817 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:13:09.074 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@8a4a331
07-07 16:13:09.074 22817 22817 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:13:09.074 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:13:09.079 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:13:09.079 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:13:09.080 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:09.080 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:13:09.080 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:13:09.116 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@c4862fa
07-07 16:13:09.116 22817 22817 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:13:09.116 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:13:09.118 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:13:09.118 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:13:09.120 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:09.120 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:13:09.120 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.06, 单位=斤
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:13:16.323 22817 22817 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:13:16.825 22817 22817 D CustomerStockOut: [打印流程] 测试TSC打印机响应
07-07 16:13:16.825 22817 22817 D CustomerStockOut: [打印流程] 发送TSC状态查询命令
07-07 16:13:17.826 22817 22817 D CustomerStockOut: [打印流程] TSC状态查询后连接状态: true
07-07 16:13:17.826 22817 22817 D CustomerStockOut: [打印流程] 发送打印命令验证
07-07 16:13:18.328 22817 22817 D CustomerStockOut: [打印流程] TSC最终连接状态: true
07-07 16:13:18.328 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:13:18.328 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:13:18.328 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:13:18.329 22817 22817 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:13:18.330 22817 23102 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:13:18.330 22817 23102 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:13:18.330 22817 23102 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:13:18.331 22817 23102 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:13:18.331 22817 23102 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.06
07-07 16:13:18.331 22817 23102 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:13:18.331 22817 23102 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:13:18.331 22817 23102 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:13:18.332 22817 23102 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:13:20.332 22817 23102 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:13:20.333 22817 23102 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:13:21.834 22817 23102 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:13:22.835 22817 23102 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:13:22.835 22817 23102 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:13:22.840 22817 22817 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:13:22.840 22817 22817 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:13:22.841 22817 22817 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:13:22.864 22817 22817 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:13:22.864 22817 22817 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.06, cleanWeight=0.06, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:13:22.864 22817 22817 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:13:22.864 22817 22817 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:13:22.867 22817 22817 D CustomerStockOut: [网络] API请求开始
07-07 16:13:22.887 22817 22817 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:13:22.887 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:13:22.887 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:13:22.887 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:13:22.896 22817 22817 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:13:22.920 22817 22817 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:13:22.937 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:13:22.938 22817 22817 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:13:22.980 22817 22817 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:13:22.980 22817 22817 D CustomerStockOut: [网络] 响应码: null
07-07 16:13:22.980 22817 22817 D CustomerStockOut: [网络] 响应消息: null
07-07 16:13:22.980 22817 22817 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:13:22.980 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:13:22.983 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:13:23.000 22817 22817 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:13:23.000 22817 22817 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:13:23.010 22817 22817 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:13:23.010 22817 22817 D CustomerStockOut: [网络] 保存流程完成
07-07 16:13:23.010 22817 22817 D CustomerStockOut: [网络] API调用完成
07-07 16:13:23.010 22817 22817 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:13:23.025 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@911e824
07-07 16:13:23.025 22817 22817 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:13:23.025 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:13:23.026 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:13:23.026 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:13:23.027 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:23.027 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:13:23.027 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:13:23.091 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@5711ec1
07-07 16:13:23.091 22817 22817 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:13:23.091 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:13:23.093 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:13:23.093 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:13:23.094 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:13:23.094 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:13:23.094 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=油菜
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:14:41.540 22817 22817 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:14:41.541 22817 22817 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:14:41.541 22817 22817 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:14:41.541 22817 22817 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:14:41.541 22817 22817 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:14:41.542 22817 22817 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:14:41.582 22817 22817 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:14:46.223 22817 22817 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:14:46.223 22817 22817 D CustomerStockOut: [打印流程] printOrder called, orderId=127611
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 订单信息: 商品=油菜, 数量=1111, 重量=0.06, 单位=斤
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:14:46.224 22817 22817 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:14:46.725 22817 22817 D CustomerStockOut: [打印流程] 测试TSC打印机响应
07-07 16:14:46.725 22817 22817 D CustomerStockOut: [打印流程] 发送TSC状态查询命令
07-07 16:14:47.726 22817 22817 D CustomerStockOut: [打印流程] TSC状态查询后连接状态: true
07-07 16:14:47.726 22817 22817 D CustomerStockOut: [打印流程] 发送打印命令验证
07-07 16:14:48.227 22817 22817 D CustomerStockOut: [打印流程] TSC最终连接状态: true
07-07 16:14:48.227 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:14:48.227 22817 22817 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:14:48.227 22817 22817 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:14:48.227 22817 22817 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:14:48.229 22817 23230 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:14:48.229 22817 23230 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:14:48.229 22817 23230 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127611
07-07 16:14:48.230 22817 23230 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:14:48.230 22817 23230 D CustomerStockOut: [打印流程] TSC 商品信息: 油菜, 数量: 0.06
07-07 16:14:48.230 22817 23230 D CustomerStockOut: [打印流程] TSC命令数据大小: 217
07-07 16:14:48.230 22817 23230 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=217
07-07 16:14:48.230 22817 23230 D CustomerStockOut: [打印流程] 发送打印数据，大小: 217
07-07 16:14:48.232 22817 23230 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:14:50.233 22817 23230 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:14:50.233 22817 23230 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:14:51.734 22817 23230 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:14:52.735 22817 23230 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:14:52.735 22817 23230 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:14:52.735 22817 22817 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:14:52.735 22817 22817 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:14:52.736 22817 22817 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:14:52.753 22817 22817 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:14:52.753 22817 22817 D CustomerStockOut: [网络] 订单参数: orderId=127611, originalWeight=0.06, cleanWeight=0.06, quantity=1111, standard=斤, remark=, goodsId=22152
07-07 16:14:52.753 22817 22817 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:14:52.753 22817 22817 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:14:52.755 22817 22817 D CustomerStockOut: [网络] API请求开始
07-07 16:14:52.773 22817 22817 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:14:52.773 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:14:52.774 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:14:52.774 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:14:52.784 22817 22817 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:14:52.785 22817 22817 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:14:52.849 22817 22817 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:14:52.849 22817 22817 D CustomerStockOut: [网络] 响应码: null
07-07 16:14:52.849 22817 22817 D CustomerStockOut: [网络] 响应消息: null
07-07 16:14:52.849 22817 22817 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:14:52.849 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:14:52.851 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:14:52.851 22817 22817 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:14:52.851 22817 22817 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:14:52.851 22817 22817 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:14:52.851 22817 22817 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:14:52.852 22817 22817 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:14:52.857 22817 22817 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:14:52.857 22817 22817 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:14:52.861 22817 22817 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:14:52.861 22817 22817 D CustomerStockOut: [网络] 保存流程完成
07-07 16:14:52.861 22817 22817 D CustomerStockOut: [网络] API调用完成
07-07 16:14:52.861 22817 22817 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:14:52.925 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@b7d3f32
07-07 16:14:52.925 22817 22817 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:14:52.925 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:14:52.926 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:14:52.926 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:14:52.927 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:14:52.927 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:14:52.927 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:14:52.948 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@c2ccb71
07-07 16:14:52.948 22817 22817 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:14:52.948 22817 22817 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:14:52.949 22817 22817 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:14:52.949 22817 22817 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:14:52.950 22817 22817 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:14:52.950 22817 22817 D CustomerStockOut: [UI] UI更新完成
07-07 16:14:52.950 22817 22817 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:16:35.689 23839 23839 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:16:35.697 23839 23839 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:16:35.697 23839 23839 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:16:35.697 23839 23839 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:16:35.697 23839 23839 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:16:35.697 23839 23839 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:16:35.697 23839 23839 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:16:35.698 23839 23839 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:16:35.698 23839 23839 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:16:35.699 23839 23839 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:16:35.699 23839 23839 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:16:37.606 23839 23839 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:16:37.607 23839 23839 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:16:37.607 23839 23839 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:16:37.607 23839 23839 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:16:37.607 23839 23839 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:16:37.608 23839 23839 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:16:37.608 23839 23839 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:16:37.627 23839 23839 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:16:37.744 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@4816224
07-07 16:16:37.744 23839 23839 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:16:37.744 23839 23839 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:16:37.745 23839 23839 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:16:37.745 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:16:37.747 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:16:37.747 23839 23839 D CustomerStockOut: [UI] UI更新完成
07-07 16:16:37.747 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:16:39.621 23839 23839 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:16:39.622 23839 23839 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:16:39.623 23839 23839 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:16:39.739 23839 23839 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:16:39.740 23839 23839 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:16:39.747 23839 23839 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:16:39.800 23839 23839 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.06, 单位=斤
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:16:49.849 23839 23839 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:16:49.851 23839 23839 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:16:49.851 23839 23839 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:16:50.353 23839 23839 D CustomerStockOut: [打印流程] 测试TSC打印机响应
07-07 16:16:50.353 23839 23839 D CustomerStockOut: [打印流程] 发送TSC状态查询命令
07-07 16:16:51.354 23839 23839 D CustomerStockOut: [打印流程] TSC状态查询后连接状态: true
07-07 16:16:51.354 23839 23839 D CustomerStockOut: [打印流程] 尝试读取打印机响应数据...
07-07 16:16:51.354 23839 23839 D CustomerStockOut: [打印流程] 发送查询命令验证打印机响应
07-07 16:16:52.857 23839 23839 D CustomerStockOut: [打印流程] 查询命令后连接状态: true
07-07 16:16:52.857 23839 23839 D CustomerStockOut: [打印流程] 发送初始化命令最终验证
07-07 16:16:53.859 23839 23839 D CustomerStockOut: [打印流程] TSC最终连接状态: true
07-07 16:16:53.859 23839 23839 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:16:53.859 23839 23839 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:16:53.859 23839 23839 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:16:53.859 23839 23839 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:16:53.861 23839 24063 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:16:53.861 23839 24063 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:16:53.861 23839 24063 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:16:53.862 23839 24063 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:16:53.863 23839 24063 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.06
07-07 16:16:53.863 23839 24063 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:16:53.863 23839 24063 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:16:53.863 23839 24063 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:16:53.869 23839 24063 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:16:55.869 23839 24063 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:16:55.869 23839 24063 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:16:57.370 23839 24063 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:16:58.373 23839 24063 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:16:58.373 23839 24063 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:16:58.374 23839 23839 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:16:58.374 23839 23839 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:16:58.375 23839 23839 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:16:58.393 23839 23839 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:16:58.394 23839 23839 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.06, cleanWeight=0.06, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:16:58.394 23839 23839 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:16:58.394 23839 23839 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:16:58.417 23839 23839 D CustomerStockOut: [网络] API请求开始
07-07 16:16:58.423 23839 23839 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:16:58.423 23839 23839 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:16:58.423 23839 23839 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:16:58.424 23839 23839 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:16:58.428 23839 23839 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:16:58.429 23839 23839 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:16:58.506 23839 23839 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:16:58.506 23839 23839 D CustomerStockOut: [网络] 响应码: null
07-07 16:16:58.506 23839 23839 D CustomerStockOut: [网络] 响应消息: null
07-07 16:16:58.506 23839 23839 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:16:58.506 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:16:58.512 23839 23839 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:16:58.520 23839 23839 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:16:58.520 23839 23839 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:16:58.524 23839 23839 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:16:58.525 23839 23839 D CustomerStockOut: [网络] 保存流程完成
07-07 16:16:58.525 23839 23839 D CustomerStockOut: [网络] API调用完成
07-07 16:16:58.525 23839 23839 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:16:58.594 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@6e30e26
07-07 16:16:58.594 23839 23839 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:16:58.594 23839 23839 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:16:58.596 23839 23839 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:16:58.596 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:16:58.597 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:16:58.597 23839 23839 D CustomerStockOut: [UI] UI更新完成
07-07 16:16:58.597 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:16:58.646 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@abd27b
07-07 16:16:58.646 23839 23839 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:16:58.646 23839 23839 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:16:58.648 23839 23839 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:16:58.648 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:16:58.650 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:16:58.650 23839 23839 D CustomerStockOut: [UI] UI更新完成
07-07 16:16:58.650 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.24, 单位=斤
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:17:07.315 23839 23839 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:17:07.818 23839 23839 D CustomerStockOut: [打印流程] 测试TSC打印机响应
07-07 16:17:07.818 23839 23839 D CustomerStockOut: [打印流程] 发送TSC状态查询命令
07-07 16:17:08.820 23839 23839 D CustomerStockOut: [打印流程] TSC状态查询后连接状态: true
07-07 16:17:08.820 23839 23839 D CustomerStockOut: [打印流程] 尝试读取打印机响应数据...
07-07 16:17:08.820 23839 23839 D CustomerStockOut: [打印流程] 发送查询命令验证打印机响应
07-07 16:17:10.322 23839 23839 D CustomerStockOut: [打印流程] 查询命令后连接状态: true
07-07 16:17:10.322 23839 23839 D CustomerStockOut: [打印流程] 发送初始化命令最终验证
07-07 16:17:11.325 23839 23839 D CustomerStockOut: [打印流程] TSC最终连接状态: true
07-07 16:17:11.325 23839 23839 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:17:11.325 23839 23839 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:17:11.325 23839 23839 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:17:11.325 23839 23839 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:17:11.326 23839 24109 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:17:11.326 23839 24109 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:17:11.326 23839 24109 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:17:11.327 23839 24109 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:17:11.327 23839 24109 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.24
07-07 16:17:11.327 23839 24109 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:17:11.327 23839 24109 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:17:11.327 23839 24109 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:17:11.328 23839 24109 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:17:13.328 23839 24109 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:17:13.328 23839 24109 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:17:14.829 23839 24109 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:17:15.830 23839 24109 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:17:15.830 23839 24109 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:17:15.839 23839 23839 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:17:15.839 23839 23839 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:17:15.840 23839 23839 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:17:15.859 23839 23839 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:17:15.859 23839 23839 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.24, cleanWeight=0.24, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:17:15.859 23839 23839 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:17:15.859 23839 23839 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:17:15.861 23839 23839 D CustomerStockOut: [网络] API请求开始
07-07 16:17:15.876 23839 23839 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:17:15.876 23839 23839 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:17:15.877 23839 23839 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:17:15.877 23839 23839 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:17:15.893 23839 23839 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:17:15.911 23839 23839 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:17:15.929 23839 23839 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:17:15.929 23839 23839 D CustomerStockOut: [网络] 响应码: null
07-07 16:17:15.929 23839 23839 D CustomerStockOut: [网络] 响应消息: null
07-07 16:17:15.930 23839 23839 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:17:15.930 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:17:15.931 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:17:15.931 23839 23839 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:17:15.931 23839 23839 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:17:15.931 23839 23839 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:17:15.932 23839 23839 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:17:15.932 23839 23839 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:17:15.941 23839 23839 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:17:15.941 23839 23839 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [网络] 保存流程完成
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [网络] API调用完成
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:17:15.945 23839 23839 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:17:15.946 23839 23839 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:17:16.000 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@8883fab
07-07 16:17:16.000 23839 23839 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:17:16.000 23839 23839 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:17:16.003 23839 23839 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:17:16.003 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:17:16.004 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:17:16.004 23839 23839 D CustomerStockOut: [UI] UI更新完成
07-07 16:17:16.004 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:17:16.048 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@e825495
07-07 16:17:16.048 23839 23839 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:17:16.048 23839 23839 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:17:16.050 23839 23839 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:17:16.050 23839 23839 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:17:16.051 23839 23839 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:17:16.051 23839 23839 D CustomerStockOut: [UI] UI更新完成
07-07 16:17:16.051 23839 23839 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:23:53.739 24755 24755 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:23:53.748 24755 24755 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:23:53.748 24755 24755 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:23:53.748 24755 24755 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:23:53.748 24755 24755 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:23:53.748 24755 24755 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:23:53.748 24755 24755 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:23:53.749 24755 24755 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:23:53.749 24755 24755 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:23:53.750 24755 24755 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:23:53.751 24755 24755 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:23:54.151 24755 24755 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:23:54.151 24755 24755 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:23:54.152 24755 24755 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:23:54.167 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:23:54.168 24755 24755 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:23:54.277 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@4beff42
07-07 16:23:54.277 24755 24755 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:23:54.277 24755 24755 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:23:54.278 24755 24755 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:23:54.278 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:23:54.279 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:23:54.279 24755 24755 D CustomerStockOut: [UI] UI更新完成
07-07 16:23:54.279 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:23:55.613 24755 24755 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:23:55.614 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:23:55.616 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:23:55.616 24755 24755 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:23:55.616 24755 24755 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:23:55.616 24755 24755 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:23:55.620 24755 24755 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:23:55.667 24755 24755 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:23:56.157 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:23:56.159 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.23, 单位=斤
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:24:01.103 24755 24755 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:24:01.105 24755 24755 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:24:01.105 24755 24755 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:24:01.607 24755 24755 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:24:01.607 24755 24755 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:24:04.609 24755 24755 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:24:04.609 24755 24755 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:24:07.612 24755 24755 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:24:07.612 24755 24755 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:24:10.614 24755 24755 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:24:10.614 24755 24755 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] TSC打印机严格检测通过，所有步骤连接状态正常
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:24:13.616 24755 24755 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:24:13.618 24755 24984 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:24:13.618 24755 24984 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:24:13.618 24755 24984 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:24:13.620 24755 24984 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:24:13.621 24755 24984 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.23
07-07 16:24:13.621 24755 24984 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:24:13.621 24755 24984 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:24:13.621 24755 24984 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:24:13.627 24755 24984 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:24:15.627 24755 24984 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:24:15.627 24755 24984 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:24:17.129 24755 24984 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:24:18.130 24755 24984 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:24:18.131 24755 24984 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:24:18.132 24755 24755 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:24:18.132 24755 24755 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:24:18.133 24755 24755 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:24:18.146 24755 24755 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:24:18.147 24755 24755 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.25, cleanWeight=0.25, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:24:18.147 24755 24755 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:24:18.147 24755 24755 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:24:18.174 24755 24755 D CustomerStockOut: [网络] API请求开始
07-07 16:24:18.181 24755 24755 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:24:18.181 24755 24755 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:24:18.181 24755 24755 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:24:18.181 24755 24755 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:24:18.188 24755 24755 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:24:18.188 24755 24755 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:24:18.284 24755 24755 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:24:18.284 24755 24755 D CustomerStockOut: [网络] 响应码: null
07-07 16:24:18.284 24755 24755 D CustomerStockOut: [网络] 响应消息: null
07-07 16:24:18.284 24755 24755 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:24:18.284 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:24:18.291 24755 24755 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:24:18.300 24755 24755 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:24:18.300 24755 24755 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:24:18.309 24755 24755 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:24:18.309 24755 24755 D CustomerStockOut: [网络] 保存流程完成
07-07 16:24:18.309 24755 24755 D CustomerStockOut: [网络] API调用完成
07-07 16:24:18.309 24755 24755 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:24:18.331 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@efa4be8
07-07 16:24:18.331 24755 24755 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:24:18.331 24755 24755 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:24:18.333 24755 24755 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:24:18.333 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:24:18.334 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:18.334 24755 24755 D CustomerStockOut: [UI] UI更新完成
07-07 16:24:18.334 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:24:18.395 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@8fc86f5
07-07 16:24:18.395 24755 24755 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:24:18.395 24755 24755 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:24:18.398 24755 24755 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:24:18.398 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:24:18.400 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:18.400 24755 24755 D CustomerStockOut: [UI] UI更新完成
07-07 16:24:18.400 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.07, 单位=斤
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:24:27.191 24755 24755 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:24:27.192 24755 24755 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:24:27.192 24755 24755 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:24:27.192 24755 24755 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:24:27.693 24755 24755 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:24:27.694 24755 24755 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:24:30.697 24755 24755 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:24:30.697 24755 24755 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:24:33.704 24755 24755 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:24:33.704 24755 24755 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:24:36.706 24755 24755 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:24:36.706 24755 24755 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:24:39.708 24755 24755 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:24:39.708 24755 24755 D CustomerStockOut: [打印流程] TSC打印机严格检测通过，所有步骤连接状态正常
07-07 16:24:39.708 24755 24755 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:24:39.709 24755 24755 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:24:39.709 24755 24755 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:24:39.709 24755 24755 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:24:39.710 24755 25034 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:24:39.710 24755 25034 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:24:39.710 24755 25034 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:24:39.711 24755 25034 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:24:39.711 24755 25034 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.07
07-07 16:24:39.711 24755 25034 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:24:39.711 24755 25034 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:24:39.711 24755 25034 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:24:39.712 24755 25034 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:24:41.712 24755 25034 D CustomerStockOut: [打印流程] 开始严格检测打印机响应...
07-07 16:24:41.712 24755 25034 D CustomerStockOut: [打印流程] 发送状态查询命令验证打印机响应...
07-07 16:24:43.215 24755 25034 D CustomerStockOut: [打印流程] 发送换行命令进一步验证打印机响应...
07-07 16:24:44.216 24755 25034 D CustomerStockOut: [打印流程] 最终连接状态: true
07-07 16:24:44.216 24755 25034 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:24:44.217 24755 24755 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:24:44.217 24755 24755 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:24:44.217 24755 24755 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:24:44.240 24755 24755 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:24:44.240 24755 24755 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.05, cleanWeight=0.05, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:24:44.241 24755 24755 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:24:44.241 24755 24755 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:24:44.243 24755 24755 D CustomerStockOut: [网络] API请求开始
07-07 16:24:44.261 24755 24755 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:24:44.261 24755 24755 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:24:44.261 24755 24755 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:24:44.262 24755 24755 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:24:44.278 24755 24755 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:24:44.294 24755 24755 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:24:44.303 24755 24755 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:24:44.330 24755 24755 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:24:44.330 24755 24755 D CustomerStockOut: [网络] 响应码: null
07-07 16:24:44.330 24755 24755 D CustomerStockOut: [网络] 响应消息: null
07-07 16:24:44.330 24755 24755 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:24:44.330 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:24:44.332 24755 24755 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:24:44.340 24755 24755 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:24:44.340 24755 24755 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:24:44.348 24755 24755 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:24:44.348 24755 24755 D CustomerStockOut: [网络] 保存流程完成
07-07 16:24:44.348 24755 24755 D CustomerStockOut: [网络] API调用完成
07-07 16:24:44.348 24755 24755 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:24:44.376 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@349f640
07-07 16:24:44.377 24755 24755 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:24:44.377 24755 24755 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:24:44.380 24755 24755 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:24:44.380 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:24:44.381 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:44.381 24755 24755 D CustomerStockOut: [UI] UI更新完成
07-07 16:24:44.381 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:24:44.429 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@49dc4ed
07-07 16:24:44.429 24755 24755 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:24:44.429 24755 24755 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:24:44.431 24755 24755 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:24:44.431 24755 24755 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:24:44.432 24755 24755 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:24:44.432 24755 24755 D CustomerStockOut: [UI] UI更新完成
07-07 16:24:44.432 24755 24755 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 获取DeviceConnFactoryManager数组...
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 管理器数组: 4
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 获取到第一个管理器
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 调用manager.getConnState()...
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 打印机内部连接状态: true
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:35:18.015 24755 24755 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:35:18.016 24755 24755 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:36:38.797 28003 28003 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:36:38.806 28003 28003 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:36:38.806 28003 28003 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:36:38.806 28003 28003 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:36:38.806 28003 28003 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:36:38.807 28003 28003 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:36:38.807 28003 28003 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:36:38.807 28003 28003 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:36:38.807 28003 28003 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:36:38.808 28003 28003 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:36:38.809 28003 28003 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:36:40.462 28003 28003 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:36:40.463 28003 28003 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:36:40.464 28003 28003 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:36:40.464 28003 28003 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:36:40.464 28003 28003 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:36:40.464 28003 28003 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:36:40.486 28003 28003 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:36:40.487 28003 28003 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:36:40.593 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@4816224
07-07 16:36:40.593 28003 28003 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:36:40.593 28003 28003 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:36:40.594 28003 28003 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:36:40.594 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:36:40.595 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:36:40.595 28003 28003 D CustomerStockOut: [UI] UI更新完成
07-07 16:36:40.595 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:36:42.464 28003 28003 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:36:42.465 28003 28003 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:36:44.648 28003 28003 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:36:44.653 28003 28003 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:36:44.703 28003 28003 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.05, 单位=斤
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:37:14.001 28003 28003 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:37:14.004 28003 28003 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:37:14.004 28003 28003 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:37:14.508 28003 28003 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:37:14.508 28003 28003 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:37:15.509 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:15.509 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:15.509 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:15.609 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:15.610 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:15.710 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:15.710 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:15.810 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:15.810 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:15.911 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:15.911 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.011 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:16.011 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.112 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:16.112 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.212 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:16.212 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.313 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:16.313 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.413 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:16.413 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.514 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:16.514 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.614 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:16.614 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.715 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:16.715 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.815 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:16.815 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:16.916 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:16.916 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.016 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:17.016 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.117 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:17.117 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.217 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:17.217 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.318 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:17.318 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.418 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:17.418 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:17.519 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:17.519 28003 28003 D CustomerStockOut: [打印流程] 第1步响应检测: 无响应
07-07 16:37:17.519 28003 28003 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:37:17.519 28003 28003 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:37:18.521 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:18.521 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:18.521 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:18.621 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:18.621 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:18.722 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:18.722 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:18.822 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:18.822 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:18.923 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:18.923 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.023 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:19.023 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.123 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:19.124 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.224 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:19.224 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.324 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:19.324 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.425 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:19.425 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.525 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:19.525 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.625 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:19.625 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.726 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:19.726 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.826 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:19.826 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:19.926 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:19.927 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.027 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:20.027 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.127 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:20.127 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.228 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:20.228 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.328 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:20.328 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.429 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:20.429 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:20.529 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:20.529 28003 28003 D CustomerStockOut: [打印流程] 第2步响应检测: 无响应
07-07 16:37:20.529 28003 28003 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:37:20.530 28003 28003 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:37:21.531 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:21.531 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:21.531 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:21.632 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:21.632 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:21.732 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:21.732 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:21.832 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:21.832 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:21.933 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:21.933 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.033 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:22.033 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.133 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:22.133 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.234 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:22.234 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.334 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:22.334 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.434 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:22.434 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.535 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:22.535 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.635 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:22.635 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.735 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:22.735 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.836 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:22.836 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:22.936 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:22.936 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.036 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:23.037 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.137 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:23.137 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.237 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:23.237 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.337 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:23.338 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.438 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:23.438 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:23.538 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:23.538 28003 28003 D CustomerStockOut: [打印流程] 第3步响应检测: 无响应
07-07 16:37:23.538 28003 28003 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:37:23.539 28003 28003 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:37:24.540 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:24.540 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:24.540 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:24.641 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:24.641 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:24.741 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:24.742 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:24.842 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:24.842 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:24.942 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:24.942 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.043 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:25.043 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.143 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:25.143 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.244 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:25.244 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.344 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:25.344 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.444 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:25.444 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.545 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:25.545 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.645 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:25.645 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.745 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:25.746 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.846 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:25.846 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:25.946 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:25.946 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.046 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:26.047 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.147 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:26.147 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.247 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:26.247 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.348 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:26.348 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.448 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:26.448 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:26.548 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] 第4步响应检测: 无响应
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] TSC打印机严格检测通过，所有步骤连接状态正常
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:37:26.549 28003 28003 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:37:26.551 28003 28350 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:37:26.551 28003 28350 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:37:26.551 28003 28350 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:37:26.552 28003 28350 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:37:26.553 28003 28350 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.05
07-07 16:37:26.553 28003 28350 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:37:26.553 28003 28350 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:37:26.553 28003 28350 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:37:28.578 28003 28350 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:37:28.578 28003 28350 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:37:28.578 28003 28350 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:37:28.579 28003 28350 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:37:30.080 28003 28350 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:37:30.080 28003 28350 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:37:30.080 28003 28350 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:30.080 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.180 28003 28350 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:30.180 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.281 28003 28350 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:30.281 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.381 28003 28350 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:30.381 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.482 28003 28350 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:30.482 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.582 28003 28350 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:30.582 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.682 28003 28350 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:30.682 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.783 28003 28350 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:30.783 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.883 28003 28350 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:30.883 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:30.983 28003 28350 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:30.984 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:31.084 28003 28350 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:37:31.084 28003 28350 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:37:31.084 28003 28350 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:37:31.084 28003 28350 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:37:31.086 28003 28350 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:37:32.087 28003 28350 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:37:32.087 28003 28350 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:37:32.087 28003 28350 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:32.087 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.187 28003 28350 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:32.187 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.287 28003 28350 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:32.287 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.388 28003 28350 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:32.388 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.488 28003 28350 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:32.488 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.588 28003 28350 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:32.589 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.689 28003 28350 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:32.689 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.789 28003 28350 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:32.789 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.889 28003 28350 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:32.890 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:32.990 28003 28350 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:32.990 28003 28350 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:33.090 28003 28350 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:37:33.090 28003 28350 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:37:33.090 28003 28350 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:37:33.090 28003 28350 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:37:33.091 28003 28003 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:37:33.091 28003 28003 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:37:33.094 28003 28003 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:37:33.115 28003 28003 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:37:33.116 28003 28003 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.06, cleanWeight=0.06, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:37:33.116 28003 28003 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:37:33.116 28003 28003 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:37:33.144 28003 28003 D CustomerStockOut: [网络] API请求开始
07-07 16:37:33.156 28003 28003 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:37:33.156 28003 28003 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:37:33.156 28003 28003 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:37:33.156 28003 28003 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:37:33.162 28003 28003 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:37:33.162 28003 28003 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:37:33.199 28003 28003 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:37:33.199 28003 28003 D CustomerStockOut: [网络] 响应码: null
07-07 16:37:33.199 28003 28003 D CustomerStockOut: [网络] 响应消息: null
07-07 16:37:33.199 28003 28003 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:37:33.200 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:37:33.205 28003 28003 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:37:33.217 28003 28003 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:37:33.217 28003 28003 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:37:33.222 28003 28003 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:37:33.222 28003 28003 D CustomerStockOut: [网络] 保存流程完成
07-07 16:37:33.222 28003 28003 D CustomerStockOut: [网络] API调用完成
07-07 16:37:33.222 28003 28003 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:37:33.313 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@f753d56
07-07 16:37:33.313 28003 28003 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:37:33.313 28003 28003 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:37:33.317 28003 28003 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:37:33.317 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:37:33.318 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:37:33.318 28003 28003 D CustomerStockOut: [UI] UI更新完成
07-07 16:37:33.318 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:37:33.362 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@1e1eeeb
07-07 16:37:33.362 28003 28003 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:37:33.362 28003 28003 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:37:33.364 28003 28003 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:37:33.364 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:37:33.365 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:37:33.365 28003 28003 D CustomerStockOut: [UI] UI更新完成
07-07 16:37:33.365 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.05, 单位=斤
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:37:51.030 28003 28003 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:37:51.031 28003 28003 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:37:51.031 28003 28003 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:37:51.532 28003 28003 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:37:51.533 28003 28003 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:37:52.534 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:52.534 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:52.534 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:52.635 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:52.635 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:52.735 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:52.735 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:52.835 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:52.836 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:52.936 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:52.936 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.036 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:53.036 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.137 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:53.137 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.237 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:53.237 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.338 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:53.338 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.438 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:53.438 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.538 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:53.538 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.639 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:53.639 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.739 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:53.739 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.840 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:53.840 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:53.940 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:53.940 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.040 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:54.041 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.141 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:54.141 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.241 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:54.241 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.342 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:54.342 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.442 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:54.442 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:54.543 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:54.543 28003 28003 D CustomerStockOut: [打印流程] 第1步响应检测: 无响应
07-07 16:37:54.543 28003 28003 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:37:54.543 28003 28003 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:37:55.548 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:55.548 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:55.548 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:55.648 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:55.649 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:55.749 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:55.749 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:55.849 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:55.849 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:55.950 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:55.950 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.050 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:56.050 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.150 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:56.150 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.251 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:56.251 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.351 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:56.351 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.451 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:56.452 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.552 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:56.552 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.652 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:56.652 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.753 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:56.753 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.853 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:56.853 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:56.953 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:56.954 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.054 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:37:57.054 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.154 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:37:57.155 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.255 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:37:57.255 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.355 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:37:57.355 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.456 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:37:57.456 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:57.556 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:37:57.556 28003 28003 D CustomerStockOut: [打印流程] 第2步响应检测: 无响应
07-07 16:37:57.556 28003 28003 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:37:57.556 28003 28003 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:37:58.559 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:37:58.559 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:37:58.559 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:58.660 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:37:58.660 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:58.760 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:37:58.760 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:58.860 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:37:58.860 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:58.961 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:37:58.961 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.061 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:37:59.061 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.161 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:37:59.161 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.262 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:37:59.262 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.362 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:37:59.362 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.462 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:37:59.462 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.563 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:37:59.563 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.663 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:37:59.663 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.764 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:37:59.764 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.864 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:37:59.864 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:37:59.964 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:37:59.964 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.065 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:38:00.065 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.165 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:38:00.165 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.266 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:38:00.266 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.366 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:38:00.366 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.466 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:38:00.467 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:00.567 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:38:00.567 28003 28003 D CustomerStockOut: [打印流程] 第3步响应检测: 无响应
07-07 16:38:00.567 28003 28003 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:38:00.567 28003 28003 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:38:01.570 28003 28003 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:38:01.570 28003 28003 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:38:01.570 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:01.670 28003 28003 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:38:01.671 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:01.771 28003 28003 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:38:01.771 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:01.871 28003 28003 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:38:01.871 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:01.972 28003 28003 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:38:01.972 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.072 28003 28003 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:38:02.072 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.172 28003 28003 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:38:02.172 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.272 28003 28003 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:38:02.273 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.373 28003 28003 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:38:02.373 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.473 28003 28003 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:38:02.473 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.574 28003 28003 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:38:02.574 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.674 28003 28003 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:38:02.674 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.774 28003 28003 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:38:02.774 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.875 28003 28003 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:38:02.875 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:02.975 28003 28003 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:38:02.975 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.075 28003 28003 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:38:03.076 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.176 28003 28003 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:38:03.176 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.276 28003 28003 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:38:03.276 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.377 28003 28003 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:38:03.377 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.477 28003 28003 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:38:03.477 28003 28003 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:03.577 28003 28003 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] 第4步响应检测: 无响应
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] TSC打印机严格检测通过，所有步骤连接状态正常
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功 ==========
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] 第 1 次检测成功，打印机可用
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:38:03.578 28003 28003 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:38:03.579 28003 28446 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:38:03.579 28003 28446 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:38:03.579 28003 28446 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:38:03.580 28003 28446 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:38:03.580 28003 28446 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.05
07-07 16:38:03.581 28003 28446 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:38:03.581 28003 28446 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:38:03.581 28003 28446 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:38:03.581 28003 28446 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:38:05.582 28003 28446 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:38:05.582 28003 28446 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:38:05.582 28003 28446 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:38:05.583 28003 28446 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:38:07.083 28003 28446 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:38:07.083 28003 28446 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:38:07.083 28003 28446 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:38:07.083 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.183 28003 28446 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:38:07.183 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.284 28003 28446 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:38:07.284 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.384 28003 28446 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:38:07.384 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.485 28003 28446 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:38:07.485 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.585 28003 28446 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:38:07.585 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.686 28003 28446 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:38:07.686 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.786 28003 28446 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:38:07.786 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.887 28003 28446 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:38:07.887 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:07.987 28003 28446 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:38:07.987 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:08.087 28003 28446 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:38:08.087 28003 28446 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:38:08.088 28003 28446 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:38:08.088 28003 28446 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:38:08.089 28003 28446 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:38:09.089 28003 28446 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:38:09.090 28003 28446 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:38:09.090 28003 28446 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:38:09.090 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.190 28003 28446 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:38:09.190 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.290 28003 28446 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:38:09.290 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.390 28003 28446 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:38:09.391 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.491 28003 28446 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:38:09.491 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.591 28003 28446 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:38:09.591 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.692 28003 28446 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:38:09.692 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.792 28003 28446 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:38:09.792 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.892 28003 28446 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:38:09.892 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:09.993 28003 28446 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:38:09.993 28003 28446 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:38:10.093 28003 28446 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:38:10.093 28003 28446 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:38:10.093 28003 28446 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:38:10.093 28003 28446 D CustomerStockOut: [打印流程] 打印数据发送成功，打印完成
07-07 16:38:10.094 28003 28003 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:38:10.094 28003 28003 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:38:10.094 28003 28003 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:38:10.115 28003 28003 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:38:10.116 28003 28003 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.06, cleanWeight=0.06, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:38:10.116 28003 28003 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:38:10.116 28003 28003 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:38:10.116 28003 28003 D CustomerStockOut: [网络] API请求开始
07-07 16:38:10.121 28003 28003 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:38:10.122 28003 28003 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:38:10.122 28003 28003 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:38:10.122 28003 28003 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:38:10.126 28003 28003 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:38:10.142 28003 28003 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:38:10.169 28003 28003 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:38:10.169 28003 28003 D CustomerStockOut: [网络] 响应码: null
07-07 16:38:10.169 28003 28003 D CustomerStockOut: [网络] 响应消息: null
07-07 16:38:10.169 28003 28003 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:38:10.169 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:38:10.171 28003 28003 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:38:10.178 28003 28003 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:38:10.178 28003 28003 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:38:10.184 28003 28003 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:38:10.184 28003 28003 D CustomerStockOut: [网络] 保存流程完成
07-07 16:38:10.184 28003 28003 D CustomerStockOut: [网络] API调用完成
07-07 16:38:10.184 28003 28003 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:38:10.190 28003 28003 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:38:10.231 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@e80e7db
07-07 16:38:10.231 28003 28003 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:38:10.231 28003 28003 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:38:10.233 28003 28003 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:38:10.233 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:38:10.234 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:38:10.234 28003 28003 D CustomerStockOut: [UI] UI更新完成
07-07 16:38:10.234 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:38:10.280 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@3c35dbc
07-07 16:38:10.280 28003 28003 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:38:10.280 28003 28003 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:38:10.281 28003 28003 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:38:10.282 28003 28003 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:38:10.283 28003 28003 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:38:10.283 28003 28003 D CustomerStockOut: [UI] UI更新完成
07-07 16:38:10.283 28003 28003 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:40:34.287 29042 29042 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:40:34.295 29042 29042 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:40:34.296 29042 29042 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:40:34.296 29042 29042 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:40:34.297 29042 29042 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:40:34.298 29042 29042 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:40:35.743 29042 29042 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:40:35.744 29042 29042 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:40:35.745 29042 29042 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:40:35.745 29042 29042 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:40:35.745 29042 29042 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:40:35.765 29042 29042 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:40:35.878 29042 29042 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@624fb53
07-07 16:40:35.878 29042 29042 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:40:35.878 29042 29042 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:40:35.880 29042 29042 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:40:35.880 29042 29042 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:40:35.881 29042 29042 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:40:35.881 29042 29042 D CustomerStockOut: [UI] UI更新完成
07-07 16:40:35.881 29042 29042 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:40:37.477 29042 29042 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:40:37.478 29042 29042 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:40:37.478 29042 29042 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:40:37.478 29042 29042 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:40:37.478 29042 29042 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:40:37.482 29042 29042 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:40:37.532 29042 29042 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:40:37.747 29042 29042 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:40:37.748 29042 29042 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.06, 单位=斤
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:40:40.876 29042 29042 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:40:40.877 29042 29042 D CustomerStockOut: [打印流程] 第 1 次检测打印机状态
07-07 16:40:40.877 29042 29042 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:40:40.877 29042 29042 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:40:40.879 29042 29042 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:40:40.879 29042 29042 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:40:41.380 29042 29042 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:40:41.380 29042 29042 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:40:42.382 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:42.382 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:42.382 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.482 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:42.482 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.583 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:42.583 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.684 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:42.684 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.784 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:42.784 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.885 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:42.885 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:42.985 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:42.985 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.086 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:43.086 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.186 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:43.187 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.287 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:43.287 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.388 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:43.388 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.488 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:40:43.489 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.589 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:40:43.589 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.690 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:40:43.690 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.790 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:40:43.790 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.891 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:40:43.891 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:43.991 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:40:43.992 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:44.092 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:40:44.092 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:44.193 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:40:44.193 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:44.293 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:40:44.293 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:44.394 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:40:44.394 29042 29042 D CustomerStockOut: [打印流程] 第1步响应检测: 无响应
07-07 16:40:44.394 29042 29042 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:40:44.394 29042 29042 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:40:45.396 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:45.396 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:45.396 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.496 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:45.497 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.597 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:45.597 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.697 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:45.698 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.798 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:45.798 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.898 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:45.899 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:45.999 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:45.999 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.099 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:46.100 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.200 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:46.200 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.300 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:46.300 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.401 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:46.401 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.501 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:40:46.501 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.602 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:40:46.602 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.702 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:40:46.702 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.803 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:40:46.803 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:46.903 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:40:46.903 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:47.004 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:40:47.004 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:47.104 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:40:47.104 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:47.204 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:40:47.205 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:47.305 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:40:47.305 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:47.405 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:40:47.406 29042 29042 D CustomerStockOut: [打印流程] 第2步响应检测: 无响应
07-07 16:40:47.406 29042 29042 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:40:47.406 29042 29042 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:40:48.407 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:48.408 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:48.408 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:48.508 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:48.508 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:48.609 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:48.609 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:48.709 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:48.709 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:48.810 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:48.810 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:48.910 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:48.910 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.010 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:49.011 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.111 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:49.111 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.211 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:49.212 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.312 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:49.312 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.413 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:49.413 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.513 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:40:49.513 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.613 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:40:49.614 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.714 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:40:49.714 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.814 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:40:49.815 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:49.915 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:40:49.915 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:50.015 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:40:50.016 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:50.116 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:40:50.116 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:50.216 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:40:50.216 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:50.317 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:40:50.317 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:50.417 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:40:50.418 29042 29042 D CustomerStockOut: [打印流程] 第3步响应检测: 无响应
07-07 16:40:50.418 29042 29042 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:40:50.418 29042 29042 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:40:51.420 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:51.420 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:51.420 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:51.520 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:51.520 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:51.621 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:51.621 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:51.721 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:51.721 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:51.821 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:51.821 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:51.922 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:51.922 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.022 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:52.022 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.123 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:52.123 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.223 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:52.223 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.324 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:52.324 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.424 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:52.424 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.524 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:40:52.525 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.625 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:40:52.625 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.725 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:40:52.725 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.826 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:40:52.826 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:52.926 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:40:52.926 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:53.027 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:40:53.027 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:53.127 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:40:53.127 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:53.227 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:40:53.228 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:53.328 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:40:53.328 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:53.428 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:40:53.428 29042 29042 D CustomerStockOut: [打印流程] 第4步响应检测: 无响应
07-07 16:40:53.429 29042 29042 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:40:53.429 29042 29042 D CustomerStockOut: [打印流程] 最终验证：发送TSC状态查询命令
07-07 16:40:54.431 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:54.431 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:54.431 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:54.531 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:54.531 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:54.631 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:54.632 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:54.732 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:54.732 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:54.832 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:54.832 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:54.933 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:54.933 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.033 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:55.033 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.133 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:55.134 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.234 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:55.234 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.334 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:55.334 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.435 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:55.435 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.535 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:40:55.535 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.636 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:40:55.636 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.737 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:40:55.737 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.837 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:40:55.837 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:55.938 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:40:55.938 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:56.038 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:40:56.038 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:56.139 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:40:56.139 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:56.239 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:40:56.239 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:56.339 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:40:56.340 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:56.440 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:40:56.440 29042 29042 D CustomerStockOut: [打印流程] 最终验证响应检测: 无响应
07-07 16:40:56.440 29042 29042 E CustomerStockOut: [打印流程] ❌ TSC打印机严格检测失败，打印机无响应
07-07 16:40:56.440 29042 29042 W CustomerStockOut: [打印流程] 第 1 次检测失败
07-07 16:40:57.441 29042 29042 D CustomerStockOut: [打印流程] 第 2 次检测打印机状态
07-07 16:40:57.441 29042 29042 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:40:57.441 29042 29042 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:40:57.441 29042 29042 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:40:57.441 29042 29042 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:40:57.943 29042 29042 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:40:57.943 29042 29042 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:40:58.945 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:40:58.945 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:40:58.945 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.046 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:40:59.046 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.146 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:40:59.146 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.247 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:40:59.247 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.347 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:40:59.347 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.447 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:40:59.447 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.548 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:40:59.548 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.648 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:40:59.649 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.749 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:40:59.749 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.849 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:40:59.849 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:40:59.950 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:40:59.950 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.050 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:00.050 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.151 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:00.151 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.251 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:00.251 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.352 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:00.352 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.452 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:00.452 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.553 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:00.553 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.653 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:00.653 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.754 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:00.754 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.854 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:00.854 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:00.955 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:00.955 29042 29042 D CustomerStockOut: [打印流程] 第1步响应检测: 无响应
07-07 16:41:00.955 29042 29042 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:41:00.955 29042 29042 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:41:01.958 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:01.958 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:01.958 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.058 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:02.058 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.158 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:02.159 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.259 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:02.259 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.359 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:02.359 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.460 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:02.460 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.560 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:02.560 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.660 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:02.661 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.761 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:02.761 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.861 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:02.861 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:02.962 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:02.962 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.062 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:03.062 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.162 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:03.162 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.263 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:03.263 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.363 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:03.363 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.463 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:03.464 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.564 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:03.564 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.664 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:03.664 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.765 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:03.765 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.865 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:03.865 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:03.965 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:03.966 29042 29042 D CustomerStockOut: [打印流程] 第2步响应检测: 无响应
07-07 16:41:03.966 29042 29042 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:41:03.966 29042 29042 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:41:04.967 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:04.968 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:04.968 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.068 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:05.068 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.168 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:05.168 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.269 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:05.269 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.369 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:05.369 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.469 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:05.470 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.570 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:05.570 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.670 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:05.670 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.771 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:05.771 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.871 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:05.871 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:05.971 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:05.971 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.072 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:06.072 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.172 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:06.172 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.272 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:06.273 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.373 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:06.373 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.473 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:06.473 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.574 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:06.574 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.674 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:06.674 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.774 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:06.774 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.875 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:06.875 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:06.975 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:06.975 29042 29042 D CustomerStockOut: [打印流程] 第3步响应检测: 无响应
07-07 16:41:06.975 29042 29042 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:41:06.976 29042 29042 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:41:07.977 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:07.977 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:07.977 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.078 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:08.078 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.178 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:08.178 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.278 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:08.278 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.379 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:08.379 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.479 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:08.479 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.579 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:08.580 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.680 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:08.680 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.780 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:08.780 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.881 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:08.881 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:08.981 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:08.981 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.081 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:09.081 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.182 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:09.182 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.282 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:09.282 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.382 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:09.382 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.483 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:09.483 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.583 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:09.583 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.683 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:09.684 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.784 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:09.784 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.884 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:09.884 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:09.984 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:09.985 29042 29042 D CustomerStockOut: [打印流程] 第4步响应检测: 无响应
07-07 16:41:09.985 29042 29042 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:41:09.985 29042 29042 D CustomerStockOut: [打印流程] 最终验证：发送TSC状态查询命令
07-07 16:41:10.986 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:10.986 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:10.986 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.087 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:11.087 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.187 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:11.187 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.287 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:11.288 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.388 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:11.388 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.488 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:11.488 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.589 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:11.589 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.689 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:11.689 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.789 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:11.789 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.890 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:11.890 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:11.990 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:11.990 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.090 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:12.090 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.191 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:12.191 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.291 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:12.291 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.391 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:12.391 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.492 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:12.492 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.592 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:12.592 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.692 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:12.692 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.793 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:12.793 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.893 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:12.893 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:12.993 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:12.994 29042 29042 D CustomerStockOut: [打印流程] 最终验证响应检测: 无响应
07-07 16:41:12.994 29042 29042 E CustomerStockOut: [打印流程] ❌ TSC打印机严格检测失败，打印机无响应
07-07 16:41:12.994 29042 29042 W CustomerStockOut: [打印流程] 第 2 次检测失败
07-07 16:41:13.994 29042 29042 D CustomerStockOut: [打印流程] 第 3 次检测打印机状态
07-07 16:41:13.994 29042 29042 D CustomerStockOut: [打印流程] 开始执行严谨的打印机测试
07-07 16:41:13.994 29042 29042 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:41:13.995 29042 29042 D CustomerStockOut: [打印流程] 发送TSC清屏命令
07-07 16:41:13.995 29042 29042 D CustomerStockOut: [打印流程] 发送测试命令，数据大小: 5
07-07 16:41:14.496 29042 29042 D CustomerStockOut: [打印流程] 测试TSC打印机响应 - 严格模式
07-07 16:41:14.497 29042 29042 D CustomerStockOut: [打印流程] 第1步：发送TSC状态查询命令
07-07 16:41:15.498 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:15.498 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:15.498 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:15.599 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:15.599 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:15.699 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:15.699 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:15.799 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:15.799 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:15.900 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:15.900 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.000 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:16.000 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.100 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:16.100 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.201 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:16.201 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.301 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:16.301 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.401 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:16.401 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.501 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:16.502 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.602 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:16.602 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.702 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:16.702 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.802 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:16.803 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:16.903 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:16.903 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.003 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:17.003 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.103 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:17.104 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.204 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:17.204 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.304 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:17.304 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.405 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:17.405 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:17.505 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:17.505 29042 29042 D CustomerStockOut: [打印流程] 第1步响应检测: 无响应
07-07 16:41:17.505 29042 29042 D CustomerStockOut: [打印流程] 第1步后连接状态: true
07-07 16:41:17.505 29042 29042 D CustomerStockOut: [打印流程] 第2步：发送查询命令验证打印机响应
07-07 16:41:18.507 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:18.507 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:18.507 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:18.607 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:18.607 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:18.708 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:18.708 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:18.808 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:18.808 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:18.908 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:18.908 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.009 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:19.009 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.109 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:19.109 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.209 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:19.209 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.310 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:19.310 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.410 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:19.410 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.510 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:19.510 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.611 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:19.611 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.711 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:19.711 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.811 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:19.811 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:19.912 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:19.912 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.012 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:20.012 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.112 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:20.112 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.213 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:20.213 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.313 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:20.313 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.413 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:20.413 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:20.514 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:20.514 29042 29042 D CustomerStockOut: [打印流程] 第2步响应检测: 无响应
07-07 16:41:20.514 29042 29042 D CustomerStockOut: [打印流程] 第2步后连接状态: true
07-07 16:41:20.514 29042 29042 D CustomerStockOut: [打印流程] 第3步：发送初始化命令最终验证
07-07 16:41:21.516 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:21.516 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:21.516 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:21.616 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:21.616 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:21.716 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:21.716 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:21.817 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:21.817 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:21.917 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:21.917 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.018 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:22.018 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.118 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:22.118 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.218 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:22.218 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.319 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:22.319 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.419 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:22.419 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.519 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:22.520 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.620 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:22.620 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.720 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:22.720 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.821 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:22.821 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:22.921 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:22.921 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.021 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:23.021 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.122 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:23.122 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.222 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:23.222 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.323 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:23.323 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.423 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:23.423 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:23.523 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:23.524 29042 29042 D CustomerStockOut: [打印流程] 第3步响应检测: 无响应
07-07 16:41:23.524 29042 29042 D CustomerStockOut: [打印流程] 第3步后连接状态: true
07-07 16:41:23.524 29042 29042 D CustomerStockOut: [打印流程] 第4步：发送错误命令测试打印机响应
07-07 16:41:24.525 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:24.526 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:24.526 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:24.626 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:24.626 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:24.726 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:24.726 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:24.827 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:24.827 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:24.927 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:24.927 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.027 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:25.027 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.128 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:25.128 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.228 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:25.228 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.329 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:25.329 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.429 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:25.429 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.530 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:25.530 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.630 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:25.630 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.730 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:25.730 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.831 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:25.831 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:25.931 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:25.931 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.031 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:26.031 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.132 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:26.132 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.232 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:26.232 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.332 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:26.332 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.433 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:26.433 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:26.533 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:26.533 29042 29042 D CustomerStockOut: [打印流程] 第4步响应检测: 无响应
07-07 16:41:26.533 29042 29042 D CustomerStockOut: [打印流程] 第4步后连接状态: true
07-07 16:41:26.533 29042 29042 D CustomerStockOut: [打印流程] 最终验证：发送TSC状态查询命令
07-07 16:41:27.535 29042 29042 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 2000ms
07-07 16:41:27.535 29042 29042 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:41:27.535 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:27.636 29042 29042 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:41:27.636 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:27.736 29042 29042 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:41:27.736 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:27.836 29042 29042 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:41:27.836 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:27.937 29042 29042 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:41:27.937 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.037 29042 29042 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:41:28.037 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.137 29042 29042 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:41:28.137 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.238 29042 29042 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:41:28.238 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.338 29042 29042 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:41:28.338 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.438 29042 29042 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:41:28.438 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.539 29042 29042 D CustomerStockOut: [打印流程] 📖 第11次尝试读取数据...
07-07 16:41:28.539 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.639 29042 29042 D CustomerStockOut: [打印流程] 📖 第12次尝试读取数据...
07-07 16:41:28.639 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.740 29042 29042 D CustomerStockOut: [打印流程] 📖 第13次尝试读取数据...
07-07 16:41:28.740 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.840 29042 29042 D CustomerStockOut: [打印流程] 📖 第14次尝试读取数据...
07-07 16:41:28.840 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:28.940 29042 29042 D CustomerStockOut: [打印流程] 📖 第15次尝试读取数据...
07-07 16:41:28.940 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.040 29042 29042 D CustomerStockOut: [打印流程] 📖 第16次尝试读取数据...
07-07 16:41:29.041 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.141 29042 29042 D CustomerStockOut: [打印流程] 📖 第17次尝试读取数据...
07-07 16:41:29.141 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.241 29042 29042 D CustomerStockOut: [打印流程] 📖 第18次尝试读取数据...
07-07 16:41:29.241 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.342 29042 29042 D CustomerStockOut: [打印流程] 📖 第19次尝试读取数据...
07-07 16:41:29.342 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.442 29042 29042 D CustomerStockOut: [打印流程] 📖 第20次尝试读取数据...
07-07 16:41:29.442 29042 29042 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:41:29.542 29042 29042 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试20次，未收到数据
07-07 16:41:29.542 29042 29042 D CustomerStockOut: [打印流程] 最终验证响应检测: 无响应
07-07 16:41:29.542 29042 29042 E CustomerStockOut: [打印流程] ❌ TSC打印机严格检测失败，打印机无响应
07-07 16:41:29.542 29042 29042 W CustomerStockOut: [打印流程] 第 3 次检测失败
07-07 16:41:29.543 29042 29042 E CustomerStockOut: [打印流程] ========== 打印机状态检查失败 ==========
07-07 16:41:29.543 29042 29042 E CustomerStockOut: [打印流程] 经过 3 次检测，打印机不可用
07-07 16:41:29.543 29042 29042 E CustomerStockOut: [打印流程] ========== 打印机状态检查失败 ==========
07-07 16:41:29.543 29042 29042 E CustomerStockOut: [打印流程] 打印机未就绪
07-07 16:41:29.543 29042 29042 E CustomerStockOut: [打印流程] 调用onPrintFail回调...
07-07 16:43:12.353 29871 29871 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:43:12.362 29871 29871 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:43:12.363 29871 29871 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:43:12.363 29871 29871 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:43:12.364 29871 29871 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:43:15.968 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:15.969 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:15.969 29871 29871 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:43:15.969 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:15.969 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:15.969 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:43:15.993 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:15.994 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:15.994 29871 29871 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:43:15.994 29871 29871 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:43:16.108 29871 29871 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:43:16.115 29871 29871 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [打印机] 开始自动连接打印机
07-07 16:43:16.115 29871 29871 D CustomerStockOut: [打印机] 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:43:16.117 29871 29871 D CustomerStockOut: [打印机] 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [打印机] 连接结果: 成功
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:16.271 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:16.272 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:43:16.283 29871 29871 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:43:16.332 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@c629c52
07-07 16:43:16.332 29871 29871 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:43:16.332 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:16.334 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:43:16.334 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:16.335 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:16.335 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:16.335 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:43:16.388 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@c6fb313
07-07 16:43:16.388 29871 29871 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:43:16.388 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:16.388 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:43:16.388 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:16.389 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:16.389 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:16.389 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:17.595 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:43:17.596 29871 29871 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:43:17.602 29871 29871 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:43:17.658 29871 29871 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:17.969 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:17.970 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:17.971 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:18.275 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:18.276 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.05, 单位=斤
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功（简化模式） ==========
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 打印机连接状态正常，认为打印机可用
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:43:21.173 29871 29871 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:43:21.174 29871 30107 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:43:21.174 29871 30107 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:43:21.174 29871 30107 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:43:21.177 29871 30107 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:43:21.178 29871 30107 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.05
07-07 16:43:21.179 29871 30107 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:43:21.179 29871 30107 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:43:21.179 29871 30107 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:43:21.184 29871 30107 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:43:23.184 29871 30107 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:43:23.184 29871 30107 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:43:23.185 29871 30107 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:43:23.186 29871 30107 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:43:24.687 29871 30107 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:43:24.687 29871 30107 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:43:24.687 29871 30107 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:43:24.687 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:24.787 29871 30107 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:43:24.787 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:24.887 29871 30107 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:43:24.887 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:24.988 29871 30107 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:43:24.988 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.088 29871 30107 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:43:25.088 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.188 29871 30107 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:43:25.188 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.289 29871 30107 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:43:25.289 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.389 29871 30107 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:43:25.389 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.490 29871 30107 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:43:25.490 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.590 29871 30107 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:43:25.590 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:25.690 29871 30107 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:43:25.690 29871 30107 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:43:25.691 29871 30107 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:43:25.691 29871 30107 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:43:25.692 29871 30107 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:43:26.693 29871 30107 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:43:26.693 29871 30107 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:43:26.693 29871 30107 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:43:26.693 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:26.793 29871 30107 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:43:26.793 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:26.894 29871 30107 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:43:26.894 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:26.994 29871 30107 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:43:26.994 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.095 29871 30107 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:43:27.095 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.195 29871 30107 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:43:27.195 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.295 29871 30107 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:43:27.296 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.396 29871 30107 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:43:27.396 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.496 29871 30107 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:43:27.496 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.597 29871 30107 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:43:27.597 29871 30107 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:27.697 29871 30107 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:43:27.697 29871 30107 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:43:27.698 29871 30107 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:43:27.698 29871 30107 D CustomerStockOut: [打印流程] 📊 响应检测总结: 状态查询=false, 换行命令=false, 总体=false
07-07 16:43:27.698 29871 30107 W CustomerStockOut: [打印流程] ⚠️ 打印数据发送成功，但打印机无响应（可能正常）
07-07 16:43:27.706 29871 29871 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:43:27.706 29871 29871 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:43:27.708 29871 29871 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:43:27.728 29871 29871 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:43:27.729 29871 29871 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.05, cleanWeight=0.05, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:43:27.729 29871 29871 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:43:27.729 29871 29871 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:43:27.751 29871 29871 D CustomerStockOut: [网络] API请求开始
07-07 16:43:27.760 29871 29871 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:43:27.760 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:27.760 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:27.760 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:27.768 29871 29871 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:43:27.769 29871 29871 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:43:27.792 29871 29871 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:43:27.792 29871 29871 D CustomerStockOut: [网络] 响应码: null
07-07 16:43:27.792 29871 29871 D CustomerStockOut: [网络] 响应消息: null
07-07 16:43:27.792 29871 29871 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:43:27.792 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:27.797 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:27.797 29871 29871 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:43:27.798 29871 29871 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:43:27.798 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:27.798 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:27.798 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:27.807 29871 29871 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:43:27.807 29871 29871 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:43:27.813 29871 29871 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:43:27.813 29871 29871 D CustomerStockOut: [网络] 保存流程完成
07-07 16:43:27.813 29871 29871 D CustomerStockOut: [网络] API调用完成
07-07 16:43:27.813 29871 29871 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:43:27.953 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@8cc15f3
07-07 16:43:27.953 29871 29871 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:43:27.953 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:27.959 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:43:27.960 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:27.961 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:27.961 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:27.961 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:43:27.997 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@e77b19d
07-07 16:43:27.997 29871 29871 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:43:27.997 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:27.998 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:43:27.998 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:27.999 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:27.999 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:27.999 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.05, 单位=斤
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法 ==========
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 开始检查打印机状态
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 打印机管理器数组: 4
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 打印机内部连接状态: true
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] ========== 打印机状态检查成功（简化模式） ==========
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 打印机连接状态正常，认为打印机可用
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:43:29.920 29871 29871 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:43:29.923 29871 30119 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:43:29.923 29871 30119 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:43:29.923 29871 30119 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:43:29.925 29871 30119 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:43:29.925 29871 30119 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.05
07-07 16:43:29.928 29871 30119 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:43:29.928 29871 30119 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:43:29.928 29871 30119 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:43:29.934 29871 30119 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:43:31.934 29871 30119 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:43:31.934 29871 30119 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:43:31.935 29871 30119 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:43:31.938 29871 30119 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:43:33.439 29871 30119 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:43:33.439 29871 30119 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:43:33.439 29871 30119 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:43:33.439 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:33.539 29871 30119 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:43:33.539 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:33.639 29871 30119 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:43:33.640 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:33.740 29871 30119 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:43:33.740 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:33.840 29871 30119 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:43:33.841 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:33.941 29871 30119 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:43:33.941 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:34.042 29871 30119 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:43:34.042 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:34.142 29871 30119 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:43:34.142 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:34.242 29871 30119 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:43:34.243 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:34.343 29871 30119 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:43:34.343 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:34.443 29871 30119 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:43:34.444 29871 30119 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:43:34.444 29871 30119 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:43:34.444 29871 30119 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:43:34.446 29871 30119 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:43:35.446 29871 30119 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:43:35.446 29871 30119 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:43:35.447 29871 30119 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:43:35.447 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:35.547 29871 30119 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:43:35.547 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:35.648 29871 30119 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:43:35.648 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:35.748 29871 30119 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:43:35.748 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:35.848 29871 30119 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:43:35.848 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:35.949 29871 30119 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:43:35.949 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:36.049 29871 30119 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:43:36.049 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:36.150 29871 30119 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:43:36.150 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:36.250 29871 30119 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:43:36.250 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:36.350 29871 30119 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:43:36.351 29871 30119 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:43:36.451 29871 30119 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:43:36.451 29871 30119 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:43:36.451 29871 30119 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:43:36.451 29871 30119 D CustomerStockOut: [打印流程] 📊 响应检测总结: 状态查询=false, 换行命令=false, 总体=false
07-07 16:43:36.451 29871 30119 W CustomerStockOut: [打印流程] ⚠️ 打印数据发送成功，但打印机无响应（可能正常）
07-07 16:43:36.452 29871 29871 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:43:36.452 29871 29871 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:43:36.453 29871 29871 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:43:36.469 29871 29871 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:43:36.470 29871 29871 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.06, cleanWeight=0.06, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:43:36.470 29871 29871 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:43:36.470 29871 29871 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:43:36.472 29871 29871 D CustomerStockOut: [网络] API请求开始
07-07 16:43:36.482 29871 29871 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:43:36.482 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:36.483 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:36.483 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:36.489 29871 29871 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法 ==========
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ========== 打印机连接验证成功 ==========
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ✅ 打印机内部状态显示已连接
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:43:36.505 29871 29871 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:43:36.532 29871 29871 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:43:36.532 29871 29871 D CustomerStockOut: [网络] 响应码: null
07-07 16:43:36.532 29871 29871 D CustomerStockOut: [网络] 响应消息: null
07-07 16:43:36.532 29871 29871 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:43:36.532 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:36.534 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:36.534 29871 29871 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:43:36.534 29871 29871 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:43:36.535 29871 29871 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:43:36.535 29871 29871 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:43:36.535 29871 29871 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:43:36.542 29871 29871 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:43:36.542 29871 29871 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:43:36.549 29871 29871 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:43:36.549 29871 29871 D CustomerStockOut: [网络] 保存流程完成
07-07 16:43:36.549 29871 29871 D CustomerStockOut: [网络] API调用完成
07-07 16:43:36.549 29871 29871 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:43:36.598 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@a5ab38c
07-07 16:43:36.598 29871 29871 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:43:36.598 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:36.601 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:43:36.601 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:43:36.603 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:36.603 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:36.603 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:43:36.644 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@add0789
07-07 16:43:36.644 29871 29871 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:43:36.644 29871 29871 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:43:36.646 29871 29871 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:43:36.646 29871 29871 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:43:36.647 29871 29871 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:43:36.647 29871 29871 D CustomerStockOut: [UI] UI更新完成
07-07 16:43:36.647 29871 29871 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:52:54.110 31029 31029 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:52:54.118 31029 31029 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:52:54.118 31029 31029 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:52:54.119 31029 31029 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:52:54.121 31029 31029 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:52:54.121 31029 31029 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:52:54.121 31029 31029 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:52:55.789 31029 31029 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:52:56.789 31029 31029 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: null
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> false
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:52:56.790 31029 31029 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:52:56.791 31029 31029 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:52:56.791 31029 31029 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:52:56.815 31029 31029 D CustomerStockOut: [生命周期] onResume完成，当前模式: 非打印标签
07-07 16:52:56.921 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@a6bdf0c
07-07 16:52:56.921 31029 31029 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:52:56.921 31029 31029 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:52:56.923 31029 31029 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:52:56.923 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:52:56.924 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:52:56.924 31029 31029 D CustomerStockOut: [UI] UI更新完成
07-07 16:52:56.924 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:52:58.281 31029 31029 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 📋 打印机指令类型: TSC
07-07 16:52:58.282 31029 31029 D CustomerStockOut: [模式判断] 📤 发送TSC清除命令...
07-07 16:52:58.285 31029 31029 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 5
07-07 16:52:58.286 31029 31029 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:52:58.287 31029 31029 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:52:58.288 31029 31029 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:52:58.288 31029 31029 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:52:58.288 31029 31029 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:52:58.288 31029 31029 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:52:58.292 31029 31029 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:52:58.334 31029 31029 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:52:58.798 31029 31029 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 📋 打印机指令类型: TSC
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 📤 发送TSC清除命令...
07-07 16:52:58.799 31029 31029 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 5
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:52:58.801 31029 31029 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:52:58.802 31029 31029 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] printOrder called, orderId=127704
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=10, 重量=0.08, 单位=斤
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法（严格版） ==========
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 🔍 开始检查打印机状态
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 📊 打印机管理器数组: 4
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] ✅ 获取到打印机管理器
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 🔌 检查打印机连接状态...
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 📡 打印机内部连接状态: true
07-07 16:53:01.818 31029 31029 D CustomerStockOut: [打印流程] 🧪 开始发送测试命令验证打印机...
07-07 16:53:01.819 31029 31029 D CustomerStockOut: [打印流程] 📋 打印机指令类型: TSC
07-07 16:53:01.819 31029 31029 D CustomerStockOut: [打印流程] 📤 发送TSC清除命令...
07-07 16:53:01.819 31029 31029 D CustomerStockOut: [打印流程] 📤 发送测试命令，数据大小: 5
07-07 16:53:01.820 31029 31029 D CustomerStockOut: [打印流程] ✅ 测试命令发送成功，打印机验证通过
07-07 16:53:01.820 31029 31029 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:53:01.820 31029 31029 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:53:01.821 31029 31253 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:53:01.821 31029 31253 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:53:01.821 31029 31253 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127704
07-07 16:53:01.823 31029 31253 D CustomerStockOut: [打印流程] TSC 部门名称: (现一)李沛谊
07-07 16:53:01.824 31029 31253 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.08
07-07 16:53:01.824 31029 31253 D CustomerStockOut: [打印流程] TSC命令数据大小: 212
07-07 16:53:01.824 31029 31253 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=212
07-07 16:53:01.824 31029 31253 D CustomerStockOut: [打印流程] 发送打印数据，大小: 212
07-07 16:53:01.830 31029 31253 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:53:03.830 31029 31253 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:53:03.830 31029 31253 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:53:03.831 31029 31253 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:53:03.833 31029 31253 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:53:05.333 31029 31253 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:53:05.333 31029 31253 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:53:05.333 31029 31253 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:53:05.333 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.433 31029 31253 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:53:05.433 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.534 31029 31253 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:53:05.534 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.634 31029 31253 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:53:05.634 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.735 31029 31253 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:53:05.735 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.835 31029 31253 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:53:05.835 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:05.935 31029 31253 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:53:05.936 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:06.036 31029 31253 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:53:06.036 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:06.136 31029 31253 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:53:06.136 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:06.237 31029 31253 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:53:06.237 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:06.337 31029 31253 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:53:06.338 31029 31253 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:53:06.338 31029 31253 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:53:06.339 31029 31253 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:53:06.341 31029 31253 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:53:07.341 31029 31253 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:53:07.341 31029 31253 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:53:07.342 31029 31253 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:53:07.342 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.442 31029 31253 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:53:07.442 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.542 31029 31253 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:53:07.542 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.643 31029 31253 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:53:07.643 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.743 31029 31253 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:53:07.743 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.844 31029 31253 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:53:07.844 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:07.944 31029 31253 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:53:07.944 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:08.044 31029 31253 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:53:08.044 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:08.145 31029 31253 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:53:08.145 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:08.245 31029 31253 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:53:08.245 31029 31253 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:08.346 31029 31253 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:53:08.346 31029 31253 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:53:08.346 31029 31253 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:53:08.346 31029 31253 D CustomerStockOut: [打印流程] 📊 响应检测总结: 状态查询=false, 换行命令=false, 总体=false
07-07 16:53:08.346 31029 31253 W CustomerStockOut: [打印流程] ⚠️ 打印数据发送成功，但打印机无响应（可能正常）
07-07 16:53:08.359 31029 31029 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:53:08.359 31029 31029 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:53:08.360 31029 31029 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:53:08.371 31029 31029 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:53:08.371 31029 31029 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.06, cleanWeight=0.06, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:53:08.371 31029 31029 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:53:08.371 31029 31029 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:53:08.397 31029 31029 D CustomerStockOut: [网络] API请求开始
07-07 16:53:08.415 31029 31029 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:53:08.415 31029 31029 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:53:08.416 31029 31029 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:53:08.416 31029 31029 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:53:08.420 31029 31029 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:53:08.421 31029 31029 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:53:08.468 31029 31029 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:53:08.468 31029 31029 D CustomerStockOut: [网络] 响应码: null
07-07 16:53:08.468 31029 31029 D CustomerStockOut: [网络] 响应消息: null
07-07 16:53:08.468 31029 31029 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:53:08.468 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:53:08.474 31029 31029 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:53:08.482 31029 31029 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:53:08.482 31029 31029 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:53:08.490 31029 31029 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:53:08.490 31029 31029 D CustomerStockOut: [网络] 保存流程完成
07-07 16:53:08.491 31029 31029 D CustomerStockOut: [网络] API调用完成
07-07 16:53:08.491 31029 31029 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:53:08.615 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@ed37e33
07-07 16:53:08.615 31029 31029 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:53:08.615 31029 31029 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:53:08.617 31029 31029 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:53:08.618 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [UI] UI更新完成
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@c4862fa
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:53:08.619 31029 31029 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:53:08.620 31029 31029 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:53:08.620 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:53:08.620 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:08.620 31029 31029 D CustomerStockOut: [UI] UI更新完成
07-07 16:53:08.620 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.06, 单位=斤
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法（严格版） ==========
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 🔍 开始检查打印机状态
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 📊 打印机管理器数组: 4
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] ✅ 获取到打印机管理器
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 🔌 检查打印机连接状态...
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 📡 打印机内部连接状态: true
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 🧪 开始发送测试命令验证打印机...
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 📋 打印机指令类型: TSC
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 📤 发送TSC清除命令...
07-07 16:53:10.297 31029 31029 D CustomerStockOut: [打印流程] 📤 发送测试命令，数据大小: 5
07-07 16:53:10.298 31029 31029 D CustomerStockOut: [打印流程] ✅ 测试命令发送成功，打印机验证通过
07-07 16:53:10.298 31029 31029 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:53:10.298 31029 31029 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:53:10.299 31029 31259 D CustomerStockOut: [打印流程] 打印机指令类型: TSC
07-07 16:53:10.299 31029 31259 D CustomerStockOut: [打印流程] 使用TSC指令打印
07-07 16:53:10.299 31029 31259 D CustomerStockOut: [打印流程] printWithTSC called, orderId=127706
07-07 16:53:10.300 31029 31259 D CustomerStockOut: [打印流程] TSC 部门名称: (pick)测试.测试一部
07-07 16:53:10.300 31029 31259 D CustomerStockOut: [打印流程] TSC 商品信息: 西红柿, 数量: 0.06
07-07 16:53:10.301 31029 31259 D CustomerStockOut: [打印流程] TSC命令数据大小: 219
07-07 16:53:10.301 31029 31259 D CustomerStockOut: [打印流程] sendPrintData called, datas.size=219
07-07 16:53:10.301 31029 31259 D CustomerStockOut: [打印流程] 发送打印数据，大小: 219
07-07 16:53:10.307 31029 31259 D CustomerStockOut: [打印流程] 数据已发送到打印机
07-07 16:53:12.307 31029 31259 D CustomerStockOut: [打印流程] 🔍 开始严格检测打印机响应...
07-07 16:53:12.307 31029 31259 D CustomerStockOut: [打印流程] 📤 发送状态查询命令验证打印机响应...
07-07 16:53:12.307 31029 31259 D CustomerStockOut: [打印流程] 📄 状态查询命令: 10 04 01
07-07 16:53:12.309 31029 31259 D CustomerStockOut: [打印流程] ⏳ 等待1500ms让打印机响应...
07-07 16:53:13.809 31029 31259 D CustomerStockOut: [打印流程] 📖 尝试读取状态查询响应...
07-07 16:53:13.809 31029 31259 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:53:13.809 31029 31259 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:53:13.809 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:13.909 31029 31259 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:53:13.909 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.010 31029 31259 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:53:14.010 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.110 31029 31259 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:53:14.110 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.210 31029 31259 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:53:14.210 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.311 31029 31259 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:53:14.311 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.412 31029 31259 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:53:14.412 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.512 31029 31259 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:53:14.512 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.613 31029 31259 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:53:14.613 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.713 31029 31259 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:53:14.713 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:14.814 31029 31259 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:53:14.814 31029 31259 D CustomerStockOut: [打印流程] 📊 状态查询响应结果: 无响应
07-07 16:53:14.814 31029 31259 D CustomerStockOut: [打印流程] 📤 发送换行命令进一步验证打印机响应...
07-07 16:53:14.814 31029 31259 D CustomerStockOut: [打印流程] 📄 换行命令: 0A
07-07 16:53:14.818 31029 31259 D CustomerStockOut: [打印流程] ⏳ 等待1000ms让打印机响应...
07-07 16:53:15.818 31029 31259 D CustomerStockOut: [打印流程] 📖 尝试读取换行命令响应...
07-07 16:53:15.818 31029 31259 D CustomerStockOut: [打印流程] 🔍 开始尝试读取打印机响应，超时时间: 1000ms
07-07 16:53:15.819 31029 31259 D CustomerStockOut: [打印流程] 📖 第1次尝试读取数据...
07-07 16:53:15.819 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:15.919 31029 31259 D CustomerStockOut: [打印流程] 📖 第2次尝试读取数据...
07-07 16:53:15.919 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.019 31029 31259 D CustomerStockOut: [打印流程] 📖 第3次尝试读取数据...
07-07 16:53:16.019 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.120 31029 31259 D CustomerStockOut: [打印流程] 📖 第4次尝试读取数据...
07-07 16:53:16.120 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.220 31029 31259 D CustomerStockOut: [打印流程] 📖 第5次尝试读取数据...
07-07 16:53:16.220 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.321 31029 31259 D CustomerStockOut: [打印流程] 📖 第6次尝试读取数据...
07-07 16:53:16.321 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.421 31029 31259 D CustomerStockOut: [打印流程] 📖 第7次尝试读取数据...
07-07 16:53:16.421 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.522 31029 31259 D CustomerStockOut: [打印流程] 📖 第8次尝试读取数据...
07-07 16:53:16.522 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.622 31029 31259 D CustomerStockOut: [打印流程] 📖 第9次尝试读取数据...
07-07 16:53:16.622 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.723 31029 31259 D CustomerStockOut: [打印流程] 📖 第10次尝试读取数据...
07-07 16:53:16.723 31029 31259 D CustomerStockOut: [打印流程] 📊 读取结果: 0 字节
07-07 16:53:16.823 31029 31259 D CustomerStockOut: [打印流程] ❌ 读取打印机响应超时，共尝试10次，未收到数据
07-07 16:53:16.823 31029 31259 D CustomerStockOut: [打印流程] 📊 换行命令响应结果: 无响应
07-07 16:53:16.823 31029 31259 D CustomerStockOut: [打印流程] 📡 最终连接状态: true
07-07 16:53:16.824 31029 31259 D CustomerStockOut: [打印流程] 📊 响应检测总结: 状态查询=false, 换行命令=false, 总体=false
07-07 16:53:16.824 31029 31259 W CustomerStockOut: [打印流程] ⚠️ 打印数据发送成功，但打印机无响应（可能正常）
07-07 16:53:16.824 31029 31029 D CustomerStockOut: [打印流程] ========== 打印成功回调 ==========
07-07 16:53:16.825 31029 31029 D CustomerStockOut: [打印流程] 调用callback.onPrintSuccess...
07-07 16:53:16.825 31029 31029 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:53:16.834 31029 31029 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:53:16.834 31029 31029 D CustomerStockOut: [网络] 订单参数: orderId=127706, originalWeight=0.05, cleanWeight=0.05, quantity=222, standard=斤, remark=哈哈哈哈哈哈哈, goodsId=22379
07-07 16:53:16.834 31029 31029 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:53:16.834 31029 31029 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:53:16.835 31029 31029 D CustomerStockOut: [网络] API请求开始
07-07 16:53:16.844 31029 31029 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:53:16.844 31029 31029 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:53:16.844 31029 31029 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:53:16.844 31029 31029 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:53:16.851 31029 31029 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:53:16.871 31029 31029 D CustomerStockOut: [打印流程] 打印成功处理完成
07-07 16:53:16.871 31029 31029 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:53:16.871 31029 31029 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:53:16.889 31029 31029 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:53:16.889 31029 31029 D CustomerStockOut: [网络] 响应码: null
07-07 16:53:16.889 31029 31029 D CustomerStockOut: [网络] 响应消息: null
07-07 16:53:16.889 31029 31029 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:53:16.889 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:53:16.891 31029 31029 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:53:16.896 31029 31029 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:53:16.896 31029 31029 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:53:16.906 31029 31029 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:53:16.906 31029 31029 D CustomerStockOut: [网络] 保存流程完成
07-07 16:53:16.906 31029 31029 D CustomerStockOut: [网络] API调用完成
07-07 16:53:16.906 31029 31029 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:53:16.972 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@1ceb341
07-07 16:53:16.972 31029 31029 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:53:16.972 31029 31029 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:53:16.974 31029 31029 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:53:16.974 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:53:16.975 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:16.975 31029 31029 D CustomerStockOut: [UI] UI更新完成
07-07 16:53:16.975 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:53:17.013 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@6bf60ca
07-07 16:53:17.013 31029 31029 D CustomerStockOut: [数据] 解析到 2 个货架
07-07 16:53:17.013 31029 31029 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:53:17.016 31029 31029 D CustomerStockOut: [UI] 货架适配器设置完成，共 2 个货架
07-07 16:53:17.016 31029 31029 D CustomerStockOut: [UI] 更新商品列表，货架: 中1，商品数量: 1
07-07 16:53:17.017 31029 31029 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:53:17.017 31029 31029 D CustomerStockOut: [UI] UI更新完成
07-07 16:53:17.017 31029 31029 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=油菜
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 📋 打印机指令类型: TSC
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 📤 发送TSC清除命令...
07-07 16:54:08.762 31029 31029 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 5
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:54:08.763 31029 31029 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:54:08.764 31029 31029 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:54:08.764 31029 31029 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:54:08.764 31029 31029 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:54:08.764 31029 31029 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:54:08.764 31029 31029 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:54:08.765 31029 31029 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:54:08.811 31029 31029 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:56:24.117 31917 31917 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:56:24.126 31917 31917 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:56:24.126 31917 31917 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:56:24.126 31917 31917 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:56:24.126 31917 31917 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:56:24.127 31917 31917 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:56:24.127 31917 31917 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:56:24.127 31917 31917 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:56:24.127 31917 31917 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:56:24.128 31917 31917 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:56:24.128 31917 31917 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:56:24.129 31917 31917 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:56:24.496 31917 31917 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:56:26.496 31917 31917 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:56:26.496 31917 31917 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:56:27.497 31917 31917 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:56:27.497 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:56:28.498 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:56:28.499 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:56:28.499 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:56:28.499 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:56:28.499 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:56:28.500 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:28.500 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:56:28.500 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:28.501 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:56:28.501 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:28.502 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:28.503 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:28.503 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:28.523 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:56:28.629 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@7847c90
07-07 16:56:28.629 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:28.629 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:28.631 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:28.631 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:28.632 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:28.632 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:28.632 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:30.509 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:30.510 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:30.512 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:31.034 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> false
07-07 16:56:31.035 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:31.036 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:56:31.036 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:31.036 31917 31917 D CustomerStockOut: [日志追踪] 当前出库模式: 非打印标签
07-07 16:56:31.036 31917 31917 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:56:31.042 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:56:31.094 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:56:32.589 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:56:32.589 31917 31917 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:56:34.510 31917 31917 D CustomerStockOut: [生命周期] onDestroy
07-07 16:56:35.041 31917 31917 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:56:35.046 31917 31917 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:56:35.046 31917 31917 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:56:35.047 31917 31917 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:56:35.047 31917 31917 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:56:35.047 31917 31917 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:56:35.048 31917 31917 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:56:35.208 31917 31917 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:56:37.208 31917 31917 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:56:37.208 31917 31917 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:56:38.208 31917 31917 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:56:38.209 31917 31917 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:56:38.209 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:56:39.210 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:56:39.210 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:39.211 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:39.211 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:39.211 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:39.229 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:56:39.337 31917 31917 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:56:39.342 31917 31917 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:56:39.342 31917 31917 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:56:39.344 31917 31917 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:56:39.489 31917 31917 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:56:41.490 31917 31917 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:56:41.490 31917 31917 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:56:42.490 31917 31917 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:56:42.490 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:56:43.491 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:56:43.491 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:56:43.491 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:56:43.491 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:56:43.491 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:56:43.491 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:43.492 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:56:43.492 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:43.492 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:56:43.492 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:43.492 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:43.493 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:43.493 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:43.506 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:56:43.550 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@e0232e7
07-07 16:56:43.550 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:43.550 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:43.551 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:43.551 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:43.551 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:43.551 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:43.551 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:56:43.552 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:56:44.552 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:44.552 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:44.553 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:56:44.622 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@bbb9fad
07-07 16:56:44.622 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:44.622 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:44.623 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:44.623 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:44.623 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:44.623 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:44.623 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:56:44.823 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:56:45.223 31917 31917 D CustomerStockOut: [生命周期] onDestroy
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:45.493 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:56:45.932 31917 31917 D CustomerStockOut: [生命周期] onDestroy
07-07 16:56:46.847 31917 31917 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:56:46.852 31917 31917 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:56:46.852 31917 31917 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:56:46.854 31917 31917 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:56:47.009 31917 31917 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:56:49.010 31917 31917 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:56:49.010 31917 31917 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:56:50.010 31917 31917 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:50.010 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:50.011 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:56:50.011 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:56:51.011 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:56:51.012 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:51.012 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:51.013 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:51.013 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:51.030 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:56:51.129 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@253902
07-07 16:56:51.129 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:51.129 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:51.130 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:51.130 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:51.130 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:51.130 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:51.130 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:56:52.870 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> false
07-07 16:56:52.871 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:52.872 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:56:52.872 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:56:52.872 31917 31917 D CustomerStockOut: [日志追踪] 当前出库模式: 非打印标签
07-07 16:56:52.872 31917 31917 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:56:52.873 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:56:52.911 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:56:53.012 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:56:53.013 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [确认回调] ========== 开始confirmListener.onConfirm ==========
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [确认回调] confirmListener.onConfirm被调用, 订单数量: 1
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [确认回调] 当前打印模式: 非打印标签
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [确认回调] 订单1详情: orderId=127704, weight=0.23, quantity=10, goodsName=西红柿
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [确认回调] 非打印模式，直接保存订单
07-07 16:56:57.752 31917 31917 D CustomerStockOut: [网络] 开始保存订单数据到服务器，订单数量: 1
07-07 16:56:57.757 31917 31917 D CustomerStockOut: [网络] 显示'正在保存数据...'提示
07-07 16:56:57.757 31917 31917 D CustomerStockOut: [网络] 订单参数: orderId=127704, originalWeight=0.23, cleanWeight=0.23, quantity=10, standard=斤, remark=, goodsId=22379
07-07 16:56:57.757 31917 31917 D CustomerStockOut: [网络] 调用真实API接口: giveOrderWeightListForStockAndFinish
07-07 16:56:57.757 31917 31917 D CustomerStockOut: [网络] 开始构建HTTP请求...
07-07 16:56:57.762 31917 31917 D CustomerStockOut: [网络] API请求开始
07-07 16:56:57.762 31917 31917 D CustomerStockOut: [确认回调] ========== confirmListener.onConfirm完成 ==========
07-07 16:56:57.768 31917 31917 D CustomerStockOut: [刷新数据] ========== 开始refreshData方法 ==========
07-07 16:56:57.768 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:57.768 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:57.768 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:57.772 31917 31917 D CustomerStockOut: [刷新数据] ========== refreshData方法完成 ==========
07-07 16:56:57.842 31917 31917 D CustomerStockOut: [网络] 保存成功，响应: null
07-07 16:56:57.842 31917 31917 D CustomerStockOut: [网络] 响应码: null
07-07 16:56:57.842 31917 31917 D CustomerStockOut: [网络] 响应消息: null
07-07 16:56:57.842 31917 31917 D CustomerStockOut: [网络] 开始刷新商品列表...
07-07 16:56:57.842 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [网络] 商品列表刷新完成
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [网络] 开始重新加载服务器数据...
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:56:57.847 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:56:57.853 31917 31917 D CustomerStockOut: [网络] 服务器数据重新加载完成
07-07 16:56:57.853 31917 31917 D CustomerStockOut: [网络] 显示成功提示: 出库成功，共处理 1 个订单
07-07 16:56:57.857 31917 31917 D CustomerStockOut: [网络] 保存成功，弹窗将自行管理关闭
07-07 16:56:57.857 31917 31917 D CustomerStockOut: [网络] 保存流程完成
07-07 16:56:57.857 31917 31917 D CustomerStockOut: [网络] API调用完成
07-07 16:56:57.857 31917 31917 D CustomerStockOut: [网络] 开始刷新UI...
07-07 16:56:57.879 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@94d3583
07-07 16:56:57.879 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:57.879 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:57.881 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:57.881 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:57.882 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:57.882 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:57.882 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:56:57.938 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@7b737c4
07-07 16:56:57.938 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:56:57.938 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:56:57.940 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:56:57.940 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:56:57.941 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:56:57.941 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:56:57.941 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:57:10.726 31917 31917 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:57:10.726 31917 31917 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 16:57:12.188 31917 31917 D CustomerStockOut: [生命周期] onDestroy
07-07 16:57:14.172 31917 31917 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:57:14.177 31917 31917 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:57:14.177 31917 31917 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:57:14.178 31917 31917 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:57:14.357 31917 31917 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:57:16.358 31917 31917 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:57:16.358 31917 31917 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:57:17.358 31917 31917 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:57:17.358 31917 31917 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:57:18.359 31917 31917 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:57:18.359 31917 31917 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:57:18.360 31917 31917 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:57:18.374 31917 31917 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:57:18.468 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@2108a5d
07-07 16:57:18.468 31917 31917 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:57:18.468 31917 31917 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:57:18.469 31917 31917 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:57:18.469 31917 31917 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:57:18.469 31917 31917 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:57:18.469 31917 31917 D CustomerStockOut: [UI] UI更新完成
07-07 16:57:18.469 31917 31917 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:57:20.360 31917 31917 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] ❌ 不支持的打印机指令集: CPCL
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 打印机连接状态: false
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=false
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] 最终打印模式: 非打印标签
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:57:20.361 31917 31917 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:57:20.362 31917 31917 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 非打印标签
07-07 16:58:39.455  1201  1201 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:58:39.465  1201  1201 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:58:39.465  1201  1201 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:58:39.466  1201  1201 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:58:39.467  1201  1201 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:58:39.467  1201  1201 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:58:39.468  1201  1201 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:58:40.340  1201  1201 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:58:42.340  1201  1201 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:58:42.340  1201  1201 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:58:43.341  1201  1201 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:58:43.341  1201  1201 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:58:44.342  1201  1201 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:58:44.342  1201  1201 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:58:44.343  1201  1201 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:58:44.344  1201  1201 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:58:44.344  1201  1201 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:58:44.344  1201  1201 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:58:44.366  1201  1201 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:58:44.481  1201  1201 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@7847c90
07-07 16:58:44.481  1201  1201 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:58:44.481  1201  1201 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:58:44.483  1201  1201 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:58:44.483  1201  1201 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:58:44.484  1201  1201 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:58:44.484  1201  1201 D CustomerStockOut: [UI] UI更新完成
07-07 16:58:44.484  1201  1201 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:58:46.344  1201  1201 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:58:46.345  1201  1201 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:58:46.346  1201  1201 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:58:46.346  1201  1201 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:58:46.348  1201  1201 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:10.468  1201  1201 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:10.469  1201  1201 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:10.469  1201  1201 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:10.469  1201  1201 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:59:10.469  1201  1201 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:59:10.469  1201  1201 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:59:10.470  1201  1201 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:10.472  1201  1201 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:10.472  1201  1201 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:10.472  1201  1201 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:59:10.472  1201  1201 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:59:10.477  1201  1201 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:59:10.532  1201  1201 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
--------- beginning of crash
07-07 16:59:15.749  1649  1649 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:59:15.756  1649  1649 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:59:15.756  1649  1649 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:59:15.756  1649  1649 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:59:15.756  1649  1649 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:59:15.757  1649  1649 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:59:15.757  1649  1649 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:59:15.757  1649  1649 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:59:15.757  1649  1649 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:59:15.758  1649  1649 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:59:15.758  1649  1649 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:59:15.759  1649  1649 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:59:16.000  1649  1649 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:59:18.000  1649  1649 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:59:18.001  1649  1649 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:59:19.001  1649  1649 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:59:19.001  1649  1649 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:59:20.002  1649  1649 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:59:20.003  1649  1649 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:20.003  1649  1649 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:20.004  1649  1649 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:59:20.004  1649  1649 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:59:20.004  1649  1649 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:59:20.030  1649  1649 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:59:20.132  1649  1649 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@53678e8
07-07 16:59:20.132  1649  1649 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:59:20.132  1649  1649 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:59:20.134  1649  1649 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:59:20.134  1649  1649 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:59:20.136  1649  1649 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:59:20.136  1649  1649 D CustomerStockOut: [UI] UI更新完成
07-07 16:59:20.136  1649  1649 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:21.392  1649  1649 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:59:21.393  1649  1649 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:59:21.394  1649  1649 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:21.396  1649  1649 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:21.396  1649  1649 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:21.396  1649  1649 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:59:21.396  1649  1649 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:59:21.400  1649  1649 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:59:21.445  1649  1649 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:59:22.004  1649  1649 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:59:22.005  1649  1649 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:22.006  1649  1649 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:22.007  1649  1649 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:29.626  2216  2216 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:59:29.634  2216  2216 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:59:29.634  2216  2216 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:59:29.635  2216  2216 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:59:29.635  2216  2216 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:59:29.635  2216  2216 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:59:29.636  2216  2216 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:59:29.866  2216  2216 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:59:31.866  2216  2216 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:59:31.866  2216  2216 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:59:32.867  2216  2216 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:59:32.867  2216  2216 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:59:33.867  2216  2216 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:59:33.867  2216  2216 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:59:33.867  2216  2216 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:33.867  2216  2216 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:33.867  2216  2216 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:33.867  2216  2216 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:59:33.868  2216  2216 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:59:33.885  2216  2216 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:59:33.999  2216  2216 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 16:59:34.005  2216  2216 W CustomerStockOut: [数据] 未接收到客户名称
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [UI] UI组件初始化完成
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [事件] 开始绑定事件
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [事件] 事件绑定完成
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 16:59:34.005  2216  2216 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 16:59:34.006  2216  2216 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 16:59:34.153  2216  2216 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 16:59:36.154  2216  2216 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 16:59:36.154  2216  2216 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 16:59:37.154  2216  2216 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:59:37.154  2216  2216 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:59:38.155  2216  2216 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:38.155  2216  2216 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:38.156  2216  2216 D CustomerStockOut: [数据] 开始加载出库数据
07-07 16:59:38.156  2216  2216 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 16:59:38.156  2216  2216 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 16:59:38.172  2216  2216 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 16:59:38.205  2216  2216 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@4816224
07-07 16:59:38.205  2216  2216 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:59:38.205  2216  2216 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:59:38.207  2216  2216 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:59:38.207  2216  2216 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:59:38.208  2216  2216 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:59:38.208  2216  2216 D CustomerStockOut: [UI] UI更新完成
07-07 16:59:38.208  2216  2216 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 16:59:38.209  2216  2216 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 16:59:39.209  2216  2216 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:39.209  2216  2216 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:39.210  2216  2216 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:39.285  2216  2216 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@75621ec
07-07 16:59:39.285  2216  2216 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 16:59:39.285  2216  2216 D CustomerStockOut: [UI] 开始更新UI显示
07-07 16:59:39.285  2216  2216 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 16:59:39.285  2216  2216 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 16:59:39.286  2216  2216 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 16:59:39.286  2216  2216 D CustomerStockOut: [UI] UI更新完成
07-07 16:59:39.286  2216  2216 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 16:59:40.156  2216  2216 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:40.156  2216  2216 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:40.156  2216  2216 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:40.156  2216  2216 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:59:40.157  2216  2216 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:59:40.158  2216  2216 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:40.158  2216  2216 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:40.159  2216  2216 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:40.159  2216  2216 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:40.159  2216  2216 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:40.159  2216  2216 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:40.161  2216  2216 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 16:59:41.300  2216  2216 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 16:59:41.302  2216  2216 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 16:59:41.304  2216  2216 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 16:59:41.304  2216  2216 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 16:59:41.304  2216  2216 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 16:59:41.304  2216  2216 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 16:59:41.308  2216  2216 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 16:59:41.354  2216  2216 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 16:59:44.739  2216  2216 D CustomerStockOut: [打印流程] ========== 开始printOrder方法 ==========
07-07 16:59:44.739  2216  2216 D CustomerStockOut: [打印流程] printOrder called, orderId=127706
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 订单信息: 商品=西红柿, 数量=222, 重量=0.23, 单位=斤
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] ========== 开始检查打印机状态 ==========
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 调用checkPrinterStatus()...
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] ========== 开始checkPrinterStatus方法（严格版） ==========
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 🔍 开始检查打印机状态
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 📊 打印机管理器数组: 4
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] ✅ 获取到打印机管理器
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 🔌 检查打印机连接状态...
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 📡 打印机内部连接状态: true
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 🧪 开始发送测试命令验证打印机...
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 📋 打印机指令类型: CPCL
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 📤 发送CPCL初始化命令...
07-07 16:59:44.740  2216  2216 D CustomerStockOut: [打印流程] 📤 发送测试命令，数据大小: 2
07-07 16:59:44.741  2216  2216 D CustomerStockOut: [打印流程] ✅ 测试命令发送成功，打印机验证通过
07-07 16:59:44.741  2216  2216 D CustomerStockOut: [打印流程] ========== 打印机状态检查通过 ==========
07-07 16:59:44.741  2216  2216 D CustomerStockOut: [打印流程] 打印机状态正常，准备下发打印任务
07-07 16:59:44.742  2216  2536 D CustomerStockOut: [打印流程] 打印机指令类型: CPCL
07-07 16:59:44.742  2216  2536 E CustomerStockOut: [打印流程] 不支持的打印机指令集: CPCL
07-07 16:59:53.903  2216  2216 D CustomerStockOut: [日志追踪] StockOutGoodsDialog onDismiss
07-07 16:59:53.903  2216  2216 D CustomerStockOut: [日志追踪] 弹窗对象已清理
07-07 17:11:48.542  5299  5299 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 17:11:48.551  5299  5299 W CustomerStockOut: [数据] 未接收到客户名称
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [UI] UI组件初始化完成
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [事件] 开始绑定事件
07-07 17:11:48.551  5299  5299 D CustomerStockOut: [事件] 事件绑定完成
07-07 17:11:48.552  5299  5299 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 17:11:48.554  5299  5299 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 17:11:48.554  5299  5299 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 17:11:48.555  5299  5299 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 17:11:56.219  5299  5299 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 17:11:56.219  5299  5299 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 17:11:57.220  5299  5299 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:11:57.220  5299  5299 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 17:11:57.221  5299  5299 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 17:11:58.222  5299  5299 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 17:11:58.223  5299  5299 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 17:11:58.223  5299  5299 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:11:58.223  5299  5299 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:11:58.223  5299  5299 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:11:58.223  5299  5299 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:11:58.223  5299  5299 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 17:11:58.224  5299  5299 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:11:58.224  5299  5299 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:11:58.224  5299  5299 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 17:11:58.225  5299  5299 D CustomerStockOut: [数据] 开始加载出库数据
07-07 17:11:58.226  5299  5299 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 17:11:58.226  5299  5299 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 17:11:58.250  5299  5299 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 17:11:58.365  5299  5299 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@8f357fd
07-07 17:11:58.366  5299  5299 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 17:11:58.366  5299  5299 D CustomerStockOut: [UI] 开始更新UI显示
07-07 17:11:58.367  5299  5299 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 17:11:58.367  5299  5299 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 17:11:58.368  5299  5299 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 17:11:58.368  5299  5299 D CustomerStockOut: [UI] UI更新完成
07-07 17:11:58.368  5299  5299 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:12:00.235  5299  5299 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:12:00.236  5299  5299 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:12:00.236  5299  5299 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:12:00.236  5299  5299 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 17:12:00.236  5299  5299 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 17:12:00.236  5299  5299 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:12:00.237  5299  5299 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:12:00.238  5299  5299 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:12:12.113  5299  5299 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 17:12:12.114  5299  5299 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 17:12:12.115  5299  5299 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:12:12.116  5299  5299 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:12:12.116  5299  5299 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 17:12:12.116  5299  5299 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 17:12:12.116  5299  5299 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 17:12:12.121  5299  5299 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 17:12:12.171  5299  5299 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 17:12:14.722  5299  5299 D CustomerStockOut: 【打印】开始打印订单
07-07 17:12:14.722  5299  5299 D CustomerStockOut: 【打印】订单信息: 商品=西红柿, 数量=10, 重量=0.22, 单位=斤
07-07 17:12:14.722  5299  5299 E CustomerStockOut: 【打印】打印机未就绪
07-07 17:14:43.459  6343  6343 D CustomerStockOut: [生命周期] onCreate开始执行
07-07 17:14:43.468  6343  6343 D CustomerStockOut: [数据] 开始初始化Intent数据
07-07 17:14:43.468  6343  6343 W CustomerStockOut: [数据] 未接收到客户名称
07-07 17:14:43.468  6343  6343 D CustomerStockOut: [数据] Intent数据初始化完成: disId=56, customerName=客户出库, selectedCount=0, orderCount=0, unpickedCount=0
07-07 17:14:43.468  6343  6343 D CustomerStockOut: [UI] 开始初始化UI组件
07-07 17:14:43.469  6343  6343 D CustomerStockOut: [UI] UI组件初始化完成
07-07 17:14:43.469  6343  6343 D CustomerStockOut: [事件] 开始绑定事件
07-07 17:14:43.469  6343  6343 D CustomerStockOut: [事件] 事件绑定完成
07-07 17:14:43.469  6343  6343 D CustomerStockOut: [打印机] 🔄 开始自动连接打印机
07-07 17:14:43.470  6343  6343 D CustomerStockOut: [打印机] 📋 缓存信息: type=bluetooth, address=DE:0E:4E:55:D8:39
07-07 17:14:43.470  6343  6343 D CustomerStockOut: [打印机] 🔌 关闭之前的连接...
07-07 17:14:43.471  6343  6343 D CustomerStockOut: [打印机] 📱 连接蓝牙打印机: DE:0E:4E:55:D8:39
07-07 17:14:43.849  6343  6343 D CustomerStockOut: [打印机] 📱 蓝牙打印机连接命令已发送
07-07 17:14:45.849  6343  6343 D CustomerStockOut: [打印机] 📊 连接结果: 成功
07-07 17:14:45.849  6343  6343 D CustomerStockOut: [打印机] ⏳ 等待打印机指令类型初始化...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [打印机] 📋 打印机指令类型: null
07-07 17:14:46.850  6343  6343 W CustomerStockOut: [打印机] ⚠️ 打印机指令类型仍为null，可能需要更长时间初始化
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] 📋 打印机指令类型: null
07-07 17:14:46.850  6343  6343 D CustomerStockOut: [模式判断] ⏳ 打印机指令类型为null，等待初始化...
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [模式判断] 📋 重新获取打印机指令类型: null
07-07 17:14:47.851  6343  6343 W CustomerStockOut: [模式判断] ⚠️ 打印机指令类型仍为null，但连接状态正常，认为打印机可用
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [打印模式] 打印模式状态变更: false -> true
07-07 17:14:47.851  6343  6343 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:14:47.852  6343  6343 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:14:47.852  6343  6343 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 17:14:47.852  6343  6343 D CustomerStockOut: [数据] 开始加载出库数据
07-07 17:14:47.853  6343  6343 D CustomerStockOut: [数据] 缓存数据: outNxDepIds=1271,1207, outGbDepIds=
07-07 17:14:47.853  6343  6343 D CustomerStockOut: [数据] nxDepIds为多个ID: 1271,1207
07-07 17:14:47.874  6343  6343 D CustomerStockOut: [生命周期] onResume完成，当前模式: 打印标签
07-07 17:14:47.990  6343  6343 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求成功，数据: com.swolo.lpy.pysx.main.modal.StockGoodsWithDepIdsResponse@7847c90
07-07 17:14:47.990  6343  6343 D CustomerStockOut: [数据] 解析到 3 个货架
07-07 17:14:47.990  6343  6343 D CustomerStockOut: [UI] 开始更新UI显示
07-07 17:14:47.992  6343  6343 D CustomerStockOut: [UI] 货架适配器设置完成，共 3 个货架
07-07 17:14:47.992  6343  6343 D CustomerStockOut: [UI] 更新商品列表，货架: 南2，商品数量: 1
07-07 17:14:47.993  6343  6343 D CustomerStockOut: [UI] 商品适配器设置完成
07-07 17:14:47.993  6343  6343 D CustomerStockOut: [UI] UI更新完成
07-07 17:14:47.993  6343  6343 D CustomerStockOut: [接口] stockerGetToStockGoodsWithDepIdsKf 请求完成
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [日志追踪] showStockOutDialog called, goods=西红柿
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [打印模式] ========== 开始refreshStockOutMode方法 ==========
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:14:49.512  6343  6343 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 17:14:49.513  6343  6343 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 17:14:49.514  6343  6343 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 17:14:49.514  6343  6343 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:14:49.514  6343  6343 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:14:49.514  6343  6343 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:14:49.515  6343  6343 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:14:49.515  6343  6343 D CustomerStockOut: [打印模式] 打印模式状态变更: true -> true
07-07 17:14:49.515  6343  6343 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:14:49.516  6343  6343 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:14:49.516  6343  6343 D CustomerStockOut: [打印模式] ========== refreshStockOutMode方法完成 ==========
07-07 17:14:49.516  6343  6343 D CustomerStockOut: [日志追踪] 当前出库模式: 打印标签
07-07 17:14:49.516  6343  6343 D CustomerStockOut: [日志追踪] 开始创建StockOutGoodsDialog
07-07 17:14:49.521  6343  6343 D CustomerStockOut: [日志追踪] StockOutGoodsDialog创建完成
07-07 17:14:49.569  6343  6343 D CustomerStockOut: [日志追踪] StockOutGoodsDialog.show() 调用
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [日志追踪] determinePrintMode() 被调用
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] ========== 开始determinePrintMode方法 ==========
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 开始判断打印模式
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 检查打印机缓存...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 打印机缓存状态: true
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 调用checkPrinterConnection()...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] ========== 开始checkPrinterConnection方法（严格版） ==========
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 🔍 获取DeviceConnFactoryManager数组...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 📊 管理器数组: 4
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] ✅ 获取到第一个管理器
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 🔌 调用manager.getConnState()...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 📡 打印机内部连接状态: true
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 🧪 开始发送测试命令验证打印机...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 📋 打印机指令类型: CPCL
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 📤 发送CPCL初始化命令...
07-07 17:14:49.852  6343  6343 D CustomerStockOut: [模式判断] 📤 发送测试命令，数据大小: 2
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式判断] ✅ 测试命令发送成功，打印机验证通过
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式判断] 打印机连接状态: true
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式判断] 打印机状态: hasCache=true, isConnected=true
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式判断] 最终打印模式: 打印标签
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式判断] ========== determinePrintMode方法完成 ==========
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [日志追踪] updateModeStatus() 被调用
07-07 17:14:49.854  6343  6343 D CustomerStockOut: [模式显示] 更新出库模式显示: 出库模式: 打印标签
07-07 17:14:52.387  6343  6343 D CustomerStockOut: 【打印】开始打印订单
07-07 17:14:52.387  6343  6343 D CustomerStockOut: 【打印】订单信息: 商品=西红柿, 数量=10, 重量=0.22, 单位=斤
07-07 17:14:52.387  6343  6343 E CustomerStockOut: 【打印】打印机未就绪
